(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    220902,       4457]
NotebookOptionsPosition[    168833,       3510]
NotebookOutlinePosition[    215116,       4363]
CellTagsIndexPosition[    215073,       4360]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{"(*", "Mathematica", "*)"}]], "Input",
 CellChangeTimes->{{3.952430025576762*^9, 3.952430037021686*^9}},
 CellLabel->
  "In[136]:=",ExpressionUUID->"a58ea637-0eaa-43ef-b69e-e6d07ca9cc9a"],

Cell[BoxData[
 RowBox[{"(*", " ", 
  RowBox[{
  "game", " ", "value", " ", "measure", " ", "of", " ", "2", "x2", " ", 
   "matrices"}], "*)"}]], "Input",
 CellChangeTimes->{{3.947764375161203*^9, 3.9477643965906363`*^9}, {
  3.9477645467998047`*^9, 3.947764548890074*^9}},
 CellLabel->
  "In[137]:=",ExpressionUUID->"87482ccc-5715-447c-87dd-c3471b441c5b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"gv", "[", "m_", "]"}], ":=", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{"ExpandAll", "[", 
    RowBox[{
     RowBox[{"Det", "[", "m", "]"}], "/", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Tr", "[", "m", "]"}], "-", 
       RowBox[{"m", "[", 
        RowBox[{"[", 
         RowBox[{"1", ",", "2"}], "]"}], "]"}], "-", 
       RowBox[{"m", "[", 
        RowBox[{"[", 
         RowBox[{"2", ",", "1"}], "]"}], "]"}]}], ")"}]}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.918128398042664*^9, 3.918128405081788*^9}, {
  3.918128481074321*^9, 3.918128484464875*^9}},
 CellLabel->
  "In[138]:=",ExpressionUUID->"1fedb6b6-feb8-4534-b83f-c6cb00645bc0"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"U", 
    RowBox[{"(", "1", ")"}], "*", "SU", 
    RowBox[{"(", "2", ")"}]}], ":", " ", 
   RowBox[{"as", " ", "quaternions"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.9524218182822638`*^9, 3.952421855494676*^9}, 
   3.953366561793606*^9},ExpressionUUID->"c9dbcd95-19f6-4215-bbba-\
8ef488f8b990"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"s", "[", "1", "]"}], "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.940862699163971*^9, 3.940862718945695*^9}},
 CellLabel->
  "In[140]:=",ExpressionUUID->"80fc9cae-f76d-4cd3-a592-19eb3b5948c0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.9408629086094313`*^9, 3.940863082695182*^9, 3.9524245312323523`*^9, 
   3.952424602667325*^9, 3.9524247395014763`*^9, 3.9524248166266947`*^9, 
   3.9524251687182913`*^9, 3.952425307425981*^9, {3.9524393168187637`*^9, 
   3.952439345005978*^9}, {3.953365992790428*^9, 3.9533660135492573`*^9}, 
   3.9533661027817698`*^9, 3.9533662780739393`*^9},
 CellLabel->
  "Out[140]=",ExpressionUUID->"9a4b556f-d82c-4f5d-8a30-f2ac66cc5a2d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"s", "[", "2", "]"}], "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1"}], ",", "0"}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.940862725260694*^9, 3.940862758560481*^9}},
 CellLabel->
  "In[141]:=",ExpressionUUID->"cbc242ec-f9b4-4086-afd0-e4d178cb8681"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.94086290899656*^9, 3.940863082778595*^9, 3.952424531240744*^9, 
   3.952424602676667*^9, 3.9524247395457697`*^9, 3.952424816635664*^9, 
   3.952425168726852*^9, 3.952425307435158*^9, {3.952439316854974*^9, 
   3.9524393450157537`*^9}, {3.953365992828362*^9, 3.953366013597396*^9}, 
   3.953366102790207*^9, 3.953366278084635*^9},
 CellLabel->
  "Out[141]=",ExpressionUUID->"85076ec7-7409-4577-a0d1-74f3ffe4d313"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"s", "[", "3", "]"}], "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"I", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"-", "I"}]}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.940862767008156*^9, 3.940862796349495*^9}},
 CellLabel->
  "In[142]:=",ExpressionUUID->"e13a1bd2-8087-45bd-841c-19fb93213412"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[ImaginaryI]", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"-", "\[ImaginaryI]"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.940862909015345*^9, 3.940863082787429*^9, 3.9524245312693443`*^9, 
   3.952424602724202*^9, 3.952424739555911*^9, 3.952424816676654*^9, 
   3.952425168777732*^9, 3.9524253074767447`*^9, {3.952439316863121*^9, 
   3.952439345060802*^9}, {3.953365992837447*^9, 3.9533660136063013`*^9}, 
   3.9533661028396807`*^9, 3.953366278130127*^9},
 CellLabel->
  "Out[142]=",ExpressionUUID->"48d96bd7-f2ba-4cf6-910d-f6fb0c950fa3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"s", "[", "4", "]"}], "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", "I"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"I", ",", "0"}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.940862799661826*^9, 3.940862820283834*^9}},
 CellLabel->
  "In[143]:=",ExpressionUUID->"5b446c56-1453-4396-a762-c4231ae62cd6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "\[ImaginaryI]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[ImaginaryI]", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.940862909023458*^9, 3.940863082811091*^9, 3.952424531278027*^9, 
   3.952424602733074*^9, 3.95242473960017*^9, 3.952424816686523*^9, 
   3.952425168787425*^9, 3.952425307486113*^9, {3.952439316899086*^9, 
   3.95243934507106*^9}, {3.953365992875114*^9, 3.953366013656509*^9}, 
   3.953366102848722*^9, 3.953366278139428*^9},
 CellLabel->
  "Out[143]=",ExpressionUUID->"b3fbd05c-ecfa-4fef-8fdd-bf5761122718"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"U", 
    RowBox[{"(", "1", ")"}], "*", "SU", 
    RowBox[{"(", 
     RowBox[{"1", ",", "1"}], ")"}]}], ":", " ", 
   RowBox[{"as", " ", "hyperbolic", " ", "quaternions"}]}], "*)"}]], "Input",
 CellChangeTimes->{{3.9524218182822638`*^9, 3.952421855494676*^9}, {
   3.953365189872023*^9, 3.953365207919536*^9}, 
   3.953366566402866*^9},ExpressionUUID->"84a8aa20-2d8b-4c75-9af2-\
bb9e28de0a84"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"s", "[", "5", "]"}], "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", 
      RowBox[{"-", "1"}]}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.940862699163971*^9, 3.940862718945695*^9}, {
  3.95336527290588*^9, 3.953365295507966*^9}},
 CellLabel->
  "In[145]:=",ExpressionUUID->"851dfac3-3a7c-41be-8801-88c93aa8d8aa"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"-", "1"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.9408629086094313`*^9, 3.940863082695182*^9, 3.9524245312323523`*^9, 
   3.952424602667325*^9, 3.9524247395014763`*^9, 3.9524248166266947`*^9, 
   3.9524251687182913`*^9, 3.952425307425981*^9, {3.9524393168187637`*^9, 
   3.952439345005978*^9}, {3.953365992917426*^9, 3.9533660137079372`*^9}, 
   3.953366102901661*^9, 3.953366278189043*^9},
 CellLabel->
  "Out[145]=",ExpressionUUID->"2b43b499-e934-4e0d-a7d5-758266330b3e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"s", "[", "6", "]"}], "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "0"}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.940862725260694*^9, 3.940862758560481*^9}, {
  3.953365280668975*^9, 3.953365300320814*^9}},
 CellLabel->
  "In[146]:=",ExpressionUUID->"670bb2d0-a197-43e1-9259-763296cc4664"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.94086290899656*^9, 3.940863082778595*^9, 3.952424531240744*^9, 
   3.952424602676667*^9, 3.9524247395457697`*^9, 3.952424816635664*^9, 
   3.952425168726852*^9, 3.952425307435158*^9, {3.952439316854974*^9, 
   3.9524393450157537`*^9}, {3.953365992928217*^9, 3.953366013718911*^9}, 
   3.953366102911838*^9, 3.953366278199463*^9},
 CellLabel->
  "Out[146]=",ExpressionUUID->"4042497f-75d4-45b4-9780-eab92f45dd9b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"s", "[", "7", "]"}], "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"I", ",", "0"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"0", ",", "I"}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.940862767008156*^9, 3.940862796349495*^9}, {
  3.9533652845823727`*^9, 3.953365303784581*^9}},
 CellLabel->
  "In[147]:=",ExpressionUUID->"efa09666-661d-440c-a79a-f020105fe89c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\[ImaginaryI]", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "\[ImaginaryI]"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.940862909015345*^9, 3.940863082787429*^9, 3.9524245312693443`*^9, 
   3.952424602724202*^9, 3.952424739555911*^9, 3.952424816676654*^9, 
   3.952425168777732*^9, 3.9524253074767447`*^9, {3.952439316863121*^9, 
   3.952439345060802*^9}, {3.9533659929654837`*^9, 3.953366013754588*^9}, 
   3.95336610292064*^9, 3.953366278207819*^9},
 CellLabel->
  "Out[147]=",ExpressionUUID->"0fa09f8e-fc9a-494d-b977-2900b3abba23"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"s", "[", "8", "]"}], "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", "I"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "I"}], ",", "0"}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.940862799661826*^9, 3.940862820283834*^9}, {
  3.9533652898044977`*^9, 3.953365307587309*^9}},
 CellLabel->
  "In[148]:=",ExpressionUUID->"0b1ebac2-a347-4a37-9889-9996b35f911f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "\[ImaginaryI]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "\[ImaginaryI]"}], ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.940862909023458*^9, 3.940863082811091*^9, 3.952424531278027*^9, 
   3.952424602733074*^9, 3.95242473960017*^9, 3.952424816686523*^9, 
   3.952425168787425*^9, 3.952425307486113*^9, {3.952439316899086*^9, 
   3.95243934507106*^9}, {3.953365992975762*^9, 3.953366013763348*^9}, 
   3.9533661029686327`*^9, 3.953366278252492*^9},
 CellLabel->
  "Out[148]=",ExpressionUUID->"c246f64e-cfc9-47df-b930-89211dd79ffb"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Chiral", " ", "matrix"}], "*)"}]], "Input",
 CellChangeTimes->{{3.952422019392591*^9, 3.9524220289593563`*^9}},
 CellLabel->
  "In[149]:=",ExpressionUUID->"36d0ace7-982d-4461-938b-11d87798b70e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"s", "[", "9", "]"}], "=", 
  RowBox[{
   RowBox[{"s", "[", "1", "]"}], ".", 
   RowBox[{"s", "[", "2", "]"}], ".", 
   RowBox[{"s", "[", "3", "]"}], ".", 
   RowBox[{"s", "[", "4", "]"}], ".", 
   RowBox[{"s", "[", "5", "]"}], ".", 
   RowBox[{"s", "[", "6", "]"}], ".", 
   RowBox[{"s", "[", "7", "]"}], ".", 
   RowBox[{"s", "[", "8", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.952421991280445*^9, 3.952422014823031*^9}, {
   3.9533653353767557`*^9, 3.953365378841423*^9}, 3.953366009399538*^9},
 CellLabel->
  "In[150]:=",ExpressionUUID->"b3b8b160-8af5-4f7c-a6f8-2702c6ca6aae"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.952424531312112*^9, 3.952424602785396*^9, 3.952424739649406*^9, 
   3.9524248167323427`*^9, 3.952425168843175*^9, 3.952425307532864*^9, {
   3.9524393169400463`*^9, 3.952439345123721*^9}, {3.9533659930202417`*^9, 
   3.953366013803813*^9}, 3.95336610302462*^9, 3.953366278302761*^9},
 CellLabel->
  "Out[150]=",ExpressionUUID->"fc3e9d7f-5858-491b-822a-1cc40809c8c9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"Det", "[", 
    RowBox[{"s", "[", "i", "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "8"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.952421871358416*^9, 3.952421904309401*^9}, 
   3.953365383931301*^9},
 CellLabel->
  "In[151]:=",ExpressionUUID->"73fde184-73e6-4a1a-83be-f884c76fcb44"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "1", ",", "1", ",", "1", ",", 
   RowBox[{"-", "1"}], ",", 
   RowBox[{"-", "1"}], ",", 
   RowBox[{"-", "1"}], ",", 
   RowBox[{"-", "1"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.952424531341777*^9, 3.952424602835621*^9, 3.95242473965891*^9, 
   3.9524248167741833`*^9, 3.952425168894079*^9, 3.952425307575333*^9, {
   3.95243931694835*^9, 3.9524393451329*^9}, {3.9533659930614567`*^9, 
   3.9533660138413754`*^9}, 3.953366103034442*^9, 3.953366278311553*^9},
 CellLabel->
  "Out[151]=",ExpressionUUID->"4433ca8b-928f-4d1e-a4ff-53adbf26a991"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"Tr", "[", 
    RowBox[{"s", "[", "i", "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "8"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9524219195397387`*^9, 3.952421920339883*^9}, 
   3.953365386587802*^9},
 CellLabel->
  "In[152]:=",ExpressionUUID->"52dbd412-d839-400a-8bcd-b4d2207ff383"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   RowBox[{"2", " ", "\[ImaginaryI]"}], ",", "0"}], "}"}]], "Output",
 CellChangeTimes->{
  3.9524245313510857`*^9, 3.952424602845171*^9, 3.9524247397028027`*^9, 
   3.952424816784686*^9, 3.952425168903224*^9, 3.952425307586706*^9, {
   3.952439316984302*^9, 3.9524393451784153`*^9}, {3.953365993070941*^9, 
   3.953366013850766*^9}, 3.953366103082858*^9, 3.953366278356924*^9},
 CellLabel->
  "Out[152]=",ExpressionUUID->"54a15f41-dda0-4328-99ab-03333c5877d6"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Carimir", " ", "Invariant"}], "*)"}]], "Input",
 CellChangeTimes->{{3.952421944859909*^9, 3.952421965369362*^9}},
 CellLabel->
  "In[153]:=",ExpressionUUID->"6bb4063e-b1d9-4f4a-9320-41dc81b2bed2"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sum", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"s", "[", "i", "]"}], ".", 
    RowBox[{"s", "[", "i", "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "8"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.952421937483181*^9, 3.9524219404664516`*^9}, 
   3.953365460007065*^9},
 CellLabel->
  "In[154]:=",ExpressionUUID->"69c703e1-b65b-4568-a813-4f77ae2e6d60"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.9524245313889303`*^9, 3.952424602896968*^9, 3.952424739752701*^9, 
   3.9524248168309526`*^9, 3.9524251689588327`*^9, 3.952425307634013*^9, {
   3.952439317024605*^9, 3.952439345228372*^9}, {3.9533659931145487`*^9, 
   3.953366013890766*^9}, 3.9533661031373453`*^9, 3.9533662784076347`*^9},
 CellLabel->
  "Out[154]=",ExpressionUUID->"4b13f131-35ce-4200-b7b6-78026d2ae52e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"gv", "[", 
    RowBox[{"s", "[", "i", "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "8"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.9524300875556602`*^9, 3.952430087931554*^9}, 
   3.95336539087521*^9},
 CellLabel->
  "In[155]:=",ExpressionUUID->"8936b1df-642b-444e-b021-bd461b4a6555"],

Cell[BoxData[
 TemplateBox[{
  "Power", "infy", 
   "\"Infinite expression \\!\\(\\*FractionBox[\\\"1\\\", \\\"0\\\"]\\) \
encountered.\"", 2, 155, 21, 25533165871484929186, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.952439317078491*^9, 3.952439345240115*^9}, {
   3.9533659931762753`*^9, 3.9533660139303637`*^9}, 3.953366103149455*^9, 
   3.9533662784199543`*^9},
 CellLabel->
  "During evaluation of \
In[155]:=",ExpressionUUID->"cab4c1a7-4627-4737-9f92-9a5df4b77a32"],

Cell[BoxData[
 TemplateBox[{
  "Power", "infy", 
   "\"Infinite expression \\!\\(\\*FractionBox[\\\"1\\\", \\\"0\\\"]\\) \
encountered.\"", 2, 155, 22, 25533165871484929186, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.952439317078491*^9, 3.952439345240115*^9}, {
   3.9533659931762753`*^9, 3.9533660139303637`*^9}, 3.953366103149455*^9, 
   3.953366278431776*^9},
 CellLabel->
  "During evaluation of \
In[155]:=",ExpressionUUID->"761ef5c2-07de-4e0d-908b-c7eaa27e56bc"],

Cell[BoxData[
 TemplateBox[{
  "Power", "infy", 
   "\"Infinite expression \\!\\(\\*FractionBox[\\\"1\\\", \\\"0\\\"]\\) \
encountered.\"", 2, 155, 23, 25533165871484929186, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.952439317078491*^9, 3.952439345240115*^9}, {
   3.9533659931762753`*^9, 3.9533660139303637`*^9}, 3.953366103149455*^9, 
   3.9533662784419394`*^9},
 CellLabel->
  "During evaluation of \
In[155]:=",ExpressionUUID->"7784e970-ccd5-4653-94a5-124ceb9783b4"],

Cell[BoxData[
 TemplateBox[{
  "General", "stop", 
   "\"Further output of \\!\\(\\*StyleBox[RowBox[{\\\"Power\\\", \\\"::\\\", \
\\\"infy\\\"}], \\\"MessageName\\\"]\\) will be suppressed during this \
calculation.\"", 2, 155, 24, 25533165871484929186, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.952439317078491*^9, 3.952439345240115*^9}, {
   3.9533659931762753`*^9, 3.9533660139303637`*^9}, 3.953366103149455*^9, 
   3.953366278452794*^9},
 CellLabel->
  "During evaluation of \
In[155]:=",ExpressionUUID->"4e4b551b-7ed6-4b99-840f-7b3b4b749109"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["1", "2"], ",", "ComplexInfinity", ",", "ComplexInfinity", ",", 
   FractionBox["\[ImaginaryI]", "2"], ",", "ComplexInfinity", ",", 
   FractionBox["1", "2"], ",", 
   FractionBox["\[ImaginaryI]", "2"], ",", "ComplexInfinity"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.952439318218316*^9, 3.95243934526383*^9}, {
   3.953365993247594*^9, 3.953366013972987*^9}, 3.953366103191319*^9, 
   3.953366278463913*^9},
 CellLabel->
  "Out[155]=",ExpressionUUID->"eb77f1d9-e506-4319-a457-425c13a842d7"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"group", " ", "sum"}], "*)"}]], "Input",
 CellChangeTimes->{{3.9524219696501837`*^9, 3.9524219765209923`*^9}},
 CellLabel->
  "In[156]:=",ExpressionUUID->"e7f6db47-d3f3-4aa5-be7b-3e81f47276f0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sum", "[", 
  RowBox[{
   RowBox[{"s", "[", "i", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "8"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.952421534735506*^9, 3.952421549389906*^9}, 
   3.953365564237235*^9},
 CellLabel->
  "In[157]:=",ExpressionUUID->"c689d62e-85a9-4256-b475-e9c2499fe8c0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"2", "+", 
      RowBox[{"2", " ", "\[ImaginaryI]"}]}], ",", 
     RowBox[{"2", "+", 
      RowBox[{"2", " ", "\[ImaginaryI]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.952424531429843*^9, 3.952424602949847*^9, 3.952424739802968*^9, 
   3.9524248168772497`*^9, 3.952425169013812*^9, 3.9524253076810427`*^9, {
   3.9524393182838583`*^9, 3.9524393453127813`*^9}, {3.953365993285398*^9, 
   3.95336601401684*^9}, 3.95336610324761*^9, 3.95336627851649*^9},
 CellLabel->
  "Out[157]=",ExpressionUUID->"8423465b-37fe-4a65-9ed4-ef7642ec775d"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ki", "=", 
  RowBox[{"Flatten", "[", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"s", "[", "i", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "8"}], "}"}]}], "]"}], ",", "1"}], "]"}]}]], "Input",\

 CellChangeTimes->{{3.95336559442732*^9, 3.953365646560575*^9}, {
  3.9533662442777042`*^9, 3.953366261899317*^9}},
 CellLabel->
  "In[158]:=",ExpressionUUID->"182741e5-2aec-4077-bf81-eb883ed3a745"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "1"}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[ImaginaryI]", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"-", "\[ImaginaryI]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "\[ImaginaryI]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[ImaginaryI]", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"-", "1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[ImaginaryI]", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "\[ImaginaryI]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "\[ImaginaryI]"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "\[ImaginaryI]"}], ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.9533659932944317`*^9, 3.9533660140259113`*^9}, 
   3.9533661032849913`*^9, {3.953366265107626*^9, 3.953366278549843*^9}},
 CellLabel->
  "Out[158]=",ExpressionUUID->"3093b9a7-b6bb-4a39-be1c-d00376f917cc"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{"ki", ".", 
   RowBox[{"Transpose", "[", "ki", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.9533656522091227`*^9, {3.953365698398242*^9, 3.9533657084779263`*^9}, {
   3.953366301642303*^9, 3.953366307785555*^9}},
 CellLabel->
  "In[166]:=",ExpressionUUID->"f3aad226-8961-44e4-944d-851875a8683c"],

Cell[BoxData[
 TagBox[GridBox[{
    {"1", "0", "0", 
     RowBox[{"-", "1"}], "\[ImaginaryI]", "0", "0", "\[ImaginaryI]", "1", "0",
      "0", "1", "\[ImaginaryI]", "0", "0", 
     RowBox[{"-", "\[ImaginaryI]"}]},
    {"0", "1", "1", "0", "0", 
     RowBox[{"-", "\[ImaginaryI]"}], "\[ImaginaryI]", "0", "0", 
     RowBox[{"-", "1"}], "1", "0", "0", "\[ImaginaryI]", "\[ImaginaryI]", "0"},
    {"0", "1", "1", "0", "0", 
     RowBox[{"-", "\[ImaginaryI]"}], "\[ImaginaryI]", "0", "0", 
     RowBox[{"-", "1"}], "1", "0", "0", "\[ImaginaryI]", "\[ImaginaryI]", "0"},
    {
     RowBox[{"-", "1"}], "0", "0", "1", 
     RowBox[{"-", "\[ImaginaryI]"}], "0", "0", 
     RowBox[{"-", "\[ImaginaryI]"}], 
     RowBox[{"-", "1"}], "0", "0", 
     RowBox[{"-", "1"}], 
     RowBox[{"-", "\[ImaginaryI]"}], "0", "0", "\[ImaginaryI]"},
    {"\[ImaginaryI]", "0", "0", 
     RowBox[{"-", "\[ImaginaryI]"}], 
     RowBox[{"-", "1"}], "0", "0", 
     RowBox[{"-", "1"}], "\[ImaginaryI]", "0", "0", "\[ImaginaryI]", 
     RowBox[{"-", "1"}], "0", "0", "1"},
    {"0", 
     RowBox[{"-", "\[ImaginaryI]"}], 
     RowBox[{"-", "\[ImaginaryI]"}], "0", "0", 
     RowBox[{"-", "1"}], "1", "0", "0", "\[ImaginaryI]", 
     RowBox[{"-", "\[ImaginaryI]"}], "0", "0", "1", "1", "0"},
    {"0", "\[ImaginaryI]", "\[ImaginaryI]", "0", "0", "1", 
     RowBox[{"-", "1"}], "0", "0", 
     RowBox[{"-", "\[ImaginaryI]"}], "\[ImaginaryI]", "0", "0", 
     RowBox[{"-", "1"}], 
     RowBox[{"-", "1"}], "0"},
    {"\[ImaginaryI]", "0", "0", 
     RowBox[{"-", "\[ImaginaryI]"}], 
     RowBox[{"-", "1"}], "0", "0", 
     RowBox[{"-", "1"}], "\[ImaginaryI]", "0", "0", "\[ImaginaryI]", 
     RowBox[{"-", "1"}], "0", "0", "1"},
    {"1", "0", "0", 
     RowBox[{"-", "1"}], "\[ImaginaryI]", "0", "0", "\[ImaginaryI]", "1", "0",
      "0", "1", "\[ImaginaryI]", "0", "0", 
     RowBox[{"-", "\[ImaginaryI]"}]},
    {"0", 
     RowBox[{"-", "1"}], 
     RowBox[{"-", "1"}], "0", "0", "\[ImaginaryI]", 
     RowBox[{"-", "\[ImaginaryI]"}], "0", "0", "1", 
     RowBox[{"-", "1"}], "0", "0", 
     RowBox[{"-", "\[ImaginaryI]"}], 
     RowBox[{"-", "\[ImaginaryI]"}], "0"},
    {"0", "1", "1", "0", "0", 
     RowBox[{"-", "\[ImaginaryI]"}], "\[ImaginaryI]", "0", "0", 
     RowBox[{"-", "1"}], "1", "0", "0", "\[ImaginaryI]", "\[ImaginaryI]", "0"},
    {"1", "0", "0", 
     RowBox[{"-", "1"}], "\[ImaginaryI]", "0", "0", "\[ImaginaryI]", "1", "0",
      "0", "1", "\[ImaginaryI]", "0", "0", 
     RowBox[{"-", "\[ImaginaryI]"}]},
    {"\[ImaginaryI]", "0", "0", 
     RowBox[{"-", "\[ImaginaryI]"}], 
     RowBox[{"-", "1"}], "0", "0", 
     RowBox[{"-", "1"}], "\[ImaginaryI]", "0", "0", "\[ImaginaryI]", 
     RowBox[{"-", "1"}], "0", "0", "1"},
    {"0", "\[ImaginaryI]", "\[ImaginaryI]", "0", "0", "1", 
     RowBox[{"-", "1"}], "0", "0", 
     RowBox[{"-", "\[ImaginaryI]"}], "\[ImaginaryI]", "0", "0", 
     RowBox[{"-", "1"}], 
     RowBox[{"-", "1"}], "0"},
    {"0", "\[ImaginaryI]", "\[ImaginaryI]", "0", "0", "1", 
     RowBox[{"-", "1"}], "0", "0", 
     RowBox[{"-", "\[ImaginaryI]"}], "\[ImaginaryI]", "0", "0", 
     RowBox[{"-", "1"}], 
     RowBox[{"-", "1"}], "0"},
    {
     RowBox[{"-", "\[ImaginaryI]"}], "0", "0", "\[ImaginaryI]", "1", "0", "0",
      "1", 
     RowBox[{"-", "\[ImaginaryI]"}], "0", "0", 
     RowBox[{"-", "\[ImaginaryI]"}], "1", "0", "0", 
     RowBox[{"-", "1"}]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.953365993328319*^9, 3.953366014064505*^9}, 
   3.953366103295268*^9, 3.953366278560431*^9, 3.953366310807176*^9},
 CellLabel->
  "Out[166]=",ExpressionUUID->"8243f813-8ab3-4cda-9ddd-31a1957b4b17"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Transpose", "[", "ki", "]"}], ".", "ki"}]], "Input",
 CellChangeTimes->{{3.953365715158215*^9, 3.953365725693301*^9}},
 CellLabel->
  "In[160]:=",ExpressionUUID->"2ab37a79-189a-40b0-8e52-f6779a81271b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.953365993365291*^9, 3.9533660140774307`*^9}, 
   3.953366103337576*^9, 3.9533662785990868`*^9},
 CellLabel->
  "Out[160]=",ExpressionUUID->"e016ff10-2dca-48cf-ba87-fdb656234aa9"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Cartan", " ", "matrix"}], "*)"}]], "Input",
 CellChangeTimes->{{3.953365741045493*^9, 3.9533657533322477`*^9}},
 CellLabel->
  "In[161]:=",ExpressionUUID->"eae93042-dc11-4867-ab9b-999fe539feed"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ca", "=", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"2", "*", 
     RowBox[{
      RowBox[{
       RowBox[{"ki", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ".", 
       RowBox[{"ki", "[", 
        RowBox[{"[", "j", "]"}], "]"}]}], "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"ki", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ".", 
        RowBox[{"ki", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], ")"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Length", "[", "ki", "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", 
      RowBox[{"Length", "[", "ki", "]"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.95336572915762*^9, 3.953365841442069*^9}, {
   3.953366046179781*^9, 3.9533660538660603`*^9}, 3.9533660973473883`*^9},
 CellLabel->
  "In[162]:=",ExpressionUUID->"bbf99c4f-89dd-420e-b822-9199dc08db3f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "0", ",", "0", ",", 
     RowBox[{"-", "2"}], ",", 
     RowBox[{"2", " ", "\[ImaginaryI]"}], ",", "0", ",", "0", ",", 
     RowBox[{"2", " ", "\[ImaginaryI]"}], ",", "2", ",", "0", ",", "0", ",", 
     "2", ",", 
     RowBox[{"2", " ", "\[ImaginaryI]"}], ",", "0", ",", "0", ",", 
     RowBox[{
      RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "2", ",", "2", ",", "0", ",", "0", ",", 
     RowBox[{
      RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}], ",", 
     RowBox[{"2", " ", "\[ImaginaryI]"}], ",", "0", ",", "0", ",", 
     RowBox[{"-", "2"}], ",", "2", ",", "0", ",", "0", ",", 
     RowBox[{"2", " ", "\[ImaginaryI]"}], ",", 
     RowBox[{"2", " ", "\[ImaginaryI]"}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "2", ",", "2", ",", "0", ",", "0", ",", 
     RowBox[{
      RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}], ",", 
     RowBox[{"2", " ", "\[ImaginaryI]"}], ",", "0", ",", "0", ",", 
     RowBox[{"-", "2"}], ",", "2", ",", "0", ",", "0", ",", 
     RowBox[{"2", " ", "\[ImaginaryI]"}], ",", 
     RowBox[{"2", " ", "\[ImaginaryI]"}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", "2"}], ",", "0", ",", "0", ",", "2", ",", 
     RowBox[{
      RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}], ",", "0", ",", "0", ",", 
     RowBox[{
      RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}], ",", 
     RowBox[{"-", "2"}], ",", "0", ",", "0", ",", 
     RowBox[{"-", "2"}], ",", 
     RowBox[{
      RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}], ",", "0", ",", "0", ",", 
     RowBox[{"2", " ", "\[ImaginaryI]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}], ",", "0", ",", "0", ",", 
     RowBox[{"2", " ", "\[ImaginaryI]"}], ",", "2", ",", "0", ",", "0", ",", 
     "2", ",", 
     RowBox[{
      RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}], ",", "0", ",", "0", ",", 
     RowBox[{
      RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}], ",", "2", ",", "0", ",", 
     "0", ",", 
     RowBox[{"-", "2"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"2", " ", "\[ImaginaryI]"}], ",", 
     RowBox[{"2", " ", "\[ImaginaryI]"}], ",", "0", ",", "0", ",", "2", ",", 
     RowBox[{"-", "2"}], ",", "0", ",", "0", ",", 
     RowBox[{
      RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}], ",", 
     RowBox[{"2", " ", "\[ImaginaryI]"}], ",", "0", ",", "0", ",", 
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "2"}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{
      RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}], ",", 
     RowBox[{
      RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}], ",", "0", ",", "0", ",", 
     RowBox[{"-", "2"}], ",", "2", ",", "0", ",", "0", ",", 
     RowBox[{"2", " ", "\[ImaginaryI]"}], ",", 
     RowBox[{
      RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}], ",", "0", ",", "0", ",", 
     "2", ",", "2", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}], ",", "0", ",", "0", ",", 
     RowBox[{"2", " ", "\[ImaginaryI]"}], ",", "2", ",", "0", ",", "0", ",", 
     "2", ",", 
     RowBox[{
      RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}], ",", "0", ",", "0", ",", 
     RowBox[{
      RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}], ",", "2", ",", "0", ",", 
     "0", ",", 
     RowBox[{"-", "2"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "0", ",", "0", ",", 
     RowBox[{"-", "2"}], ",", 
     RowBox[{"2", " ", "\[ImaginaryI]"}], ",", "0", ",", "0", ",", 
     RowBox[{"2", " ", "\[ImaginaryI]"}], ",", "2", ",", "0", ",", "0", ",", 
     "2", ",", 
     RowBox[{"2", " ", "\[ImaginaryI]"}], ",", "0", ",", "0", ",", 
     RowBox[{
      RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{"-", "2"}], ",", 
     RowBox[{"-", "2"}], ",", "0", ",", "0", ",", 
     RowBox[{"2", " ", "\[ImaginaryI]"}], ",", 
     RowBox[{
      RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}], ",", "0", ",", "0", ",", 
     "2", ",", 
     RowBox[{"-", "2"}], ",", "0", ",", "0", ",", 
     RowBox[{
      RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}], ",", 
     RowBox[{
      RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "2", ",", "2", ",", "0", ",", "0", ",", 
     RowBox[{
      RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}], ",", 
     RowBox[{"2", " ", "\[ImaginaryI]"}], ",", "0", ",", "0", ",", 
     RowBox[{"-", "2"}], ",", "2", ",", "0", ",", "0", ",", 
     RowBox[{"2", " ", "\[ImaginaryI]"}], ",", 
     RowBox[{"2", " ", "\[ImaginaryI]"}], ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "0", ",", "0", ",", 
     RowBox[{"-", "2"}], ",", 
     RowBox[{"2", " ", "\[ImaginaryI]"}], ",", "0", ",", "0", ",", 
     RowBox[{"2", " ", "\[ImaginaryI]"}], ",", "2", ",", "0", ",", "0", ",", 
     "2", ",", 
     RowBox[{"2", " ", "\[ImaginaryI]"}], ",", "0", ",", "0", ",", 
     RowBox[{
      RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}], ",", "0", ",", "0", ",", 
     RowBox[{"2", " ", "\[ImaginaryI]"}], ",", "2", ",", "0", ",", "0", ",", 
     "2", ",", 
     RowBox[{
      RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}], ",", "0", ",", "0", ",", 
     RowBox[{
      RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}], ",", "2", ",", "0", ",", 
     "0", ",", 
     RowBox[{"-", "2"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{
      RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}], ",", 
     RowBox[{
      RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}], ",", "0", ",", "0", ",", 
     RowBox[{"-", "2"}], ",", "2", ",", "0", ",", "0", ",", 
     RowBox[{"2", " ", "\[ImaginaryI]"}], ",", 
     RowBox[{
      RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}], ",", "0", ",", "0", ",", 
     "2", ",", "2", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", 
     RowBox[{
      RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}], ",", 
     RowBox[{
      RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}], ",", "0", ",", "0", ",", 
     RowBox[{"-", "2"}], ",", "2", ",", "0", ",", "0", ",", 
     RowBox[{"2", " ", "\[ImaginaryI]"}], ",", 
     RowBox[{
      RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}], ",", "0", ",", "0", ",", 
     "2", ",", "2", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"2", " ", "\[ImaginaryI]"}], ",", "0", ",", "0", ",", 
     RowBox[{
      RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}], ",", 
     RowBox[{"-", "2"}], ",", "0", ",", "0", ",", 
     RowBox[{"-", "2"}], ",", 
     RowBox[{"2", " ", "\[ImaginaryI]"}], ",", "0", ",", "0", ",", 
     RowBox[{"2", " ", "\[ImaginaryI]"}], ",", 
     RowBox[{"-", "2"}], ",", "0", ",", "0", ",", "2"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.9533659934060097`*^9, 3.953366014122863*^9}, 
   3.953366062972205*^9, 3.9533661033926687`*^9, 3.9533662786432533`*^9},
 CellLabel->
  "Out[162]=",ExpressionUUID->"8ca917b5-1e0d-407a-85cc-8b15b1a5e7ee"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", "ca", "]"}]], "Input",
 CellChangeTimes->{{3.953366115305194*^9, 3.953366120783193*^9}},
 CellLabel->
  "In[163]:=",ExpressionUUID->"83a086d9-82ec-4357-a967-3484a996e500"],

Cell[BoxData[
 TagBox[GridBox[{
    {"2", "0", "0", 
     RowBox[{"-", "2"}], 
     RowBox[{"2", " ", "\[ImaginaryI]"}], "0", "0", 
     RowBox[{"2", " ", "\[ImaginaryI]"}], "2", "0", "0", "2", 
     RowBox[{"2", " ", "\[ImaginaryI]"}], "0", "0", 
     RowBox[{
      RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}]},
    {"0", "2", "2", "0", "0", 
     RowBox[{
      RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}], 
     RowBox[{"2", " ", "\[ImaginaryI]"}], "0", "0", 
     RowBox[{"-", "2"}], "2", "0", "0", 
     RowBox[{"2", " ", "\[ImaginaryI]"}], 
     RowBox[{"2", " ", "\[ImaginaryI]"}], "0"},
    {"0", "2", "2", "0", "0", 
     RowBox[{
      RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}], 
     RowBox[{"2", " ", "\[ImaginaryI]"}], "0", "0", 
     RowBox[{"-", "2"}], "2", "0", "0", 
     RowBox[{"2", " ", "\[ImaginaryI]"}], 
     RowBox[{"2", " ", "\[ImaginaryI]"}], "0"},
    {
     RowBox[{"-", "2"}], "0", "0", "2", 
     RowBox[{
      RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}], "0", "0", 
     RowBox[{
      RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}], 
     RowBox[{"-", "2"}], "0", "0", 
     RowBox[{"-", "2"}], 
     RowBox[{
      RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}], "0", "0", 
     RowBox[{"2", " ", "\[ImaginaryI]"}]},
    {
     RowBox[{
      RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}], "0", "0", 
     RowBox[{"2", " ", "\[ImaginaryI]"}], "2", "0", "0", "2", 
     RowBox[{
      RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}], "0", "0", 
     RowBox[{
      RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}], "2", "0", "0", 
     RowBox[{"-", "2"}]},
    {"0", 
     RowBox[{"2", " ", "\[ImaginaryI]"}], 
     RowBox[{"2", " ", "\[ImaginaryI]"}], "0", "0", "2", 
     RowBox[{"-", "2"}], "0", "0", 
     RowBox[{
      RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}], 
     RowBox[{"2", " ", "\[ImaginaryI]"}], "0", "0", 
     RowBox[{"-", "2"}], 
     RowBox[{"-", "2"}], "0"},
    {"0", 
     RowBox[{
      RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}], 
     RowBox[{
      RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}], "0", "0", 
     RowBox[{"-", "2"}], "2", "0", "0", 
     RowBox[{"2", " ", "\[ImaginaryI]"}], 
     RowBox[{
      RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}], "0", "0", "2", "2", "0"},
    {
     RowBox[{
      RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}], "0", "0", 
     RowBox[{"2", " ", "\[ImaginaryI]"}], "2", "0", "0", "2", 
     RowBox[{
      RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}], "0", "0", 
     RowBox[{
      RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}], "2", "0", "0", 
     RowBox[{"-", "2"}]},
    {"2", "0", "0", 
     RowBox[{"-", "2"}], 
     RowBox[{"2", " ", "\[ImaginaryI]"}], "0", "0", 
     RowBox[{"2", " ", "\[ImaginaryI]"}], "2", "0", "0", "2", 
     RowBox[{"2", " ", "\[ImaginaryI]"}], "0", "0", 
     RowBox[{
      RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}]},
    {"0", 
     RowBox[{"-", "2"}], 
     RowBox[{"-", "2"}], "0", "0", 
     RowBox[{"2", " ", "\[ImaginaryI]"}], 
     RowBox[{
      RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}], "0", "0", "2", 
     RowBox[{"-", "2"}], "0", "0", 
     RowBox[{
      RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}], 
     RowBox[{
      RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}], "0"},
    {"0", "2", "2", "0", "0", 
     RowBox[{
      RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}], 
     RowBox[{"2", " ", "\[ImaginaryI]"}], "0", "0", 
     RowBox[{"-", "2"}], "2", "0", "0", 
     RowBox[{"2", " ", "\[ImaginaryI]"}], 
     RowBox[{"2", " ", "\[ImaginaryI]"}], "0"},
    {"2", "0", "0", 
     RowBox[{"-", "2"}], 
     RowBox[{"2", " ", "\[ImaginaryI]"}], "0", "0", 
     RowBox[{"2", " ", "\[ImaginaryI]"}], "2", "0", "0", "2", 
     RowBox[{"2", " ", "\[ImaginaryI]"}], "0", "0", 
     RowBox[{
      RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}]},
    {
     RowBox[{
      RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}], "0", "0", 
     RowBox[{"2", " ", "\[ImaginaryI]"}], "2", "0", "0", "2", 
     RowBox[{
      RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}], "0", "0", 
     RowBox[{
      RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}], "2", "0", "0", 
     RowBox[{"-", "2"}]},
    {"0", 
     RowBox[{
      RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}], 
     RowBox[{
      RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}], "0", "0", 
     RowBox[{"-", "2"}], "2", "0", "0", 
     RowBox[{"2", " ", "\[ImaginaryI]"}], 
     RowBox[{
      RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}], "0", "0", "2", "2", "0"},
    {"0", 
     RowBox[{
      RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}], 
     RowBox[{
      RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}], "0", "0", 
     RowBox[{"-", "2"}], "2", "0", "0", 
     RowBox[{"2", " ", "\[ImaginaryI]"}], 
     RowBox[{
      RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}], "0", "0", "2", "2", "0"},
    {
     RowBox[{"2", " ", "\[ImaginaryI]"}], "0", "0", 
     RowBox[{
      RowBox[{"-", "2"}], " ", "\[ImaginaryI]"}], 
     RowBox[{"-", "2"}], "0", "0", 
     RowBox[{"-", "2"}], 
     RowBox[{"2", " ", "\[ImaginaryI]"}], "0", "0", 
     RowBox[{"2", " ", "\[ImaginaryI]"}], 
     RowBox[{"-", "2"}], "0", "0", "2"}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.953366123617465*^9, 3.9533662786546593`*^9},
 CellLabel->
  "Out[163]=",ExpressionUUID->"94c87472-8c73-4145-8dae-cc19233149b0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Eigenvalues", "[", "ca", "]"}]], "Input",
 CellChangeTimes->{{3.953365844626438*^9, 3.953365852177051*^9}},
 CellLabel->
  "In[164]:=",ExpressionUUID->"710622f2-a61a-4492-bbba-994ea49b68e0"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "16", ",", "16", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0",
    ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",",
    "0"}], "}"}]], "Output",
 CellChangeTimes->{{3.9533659934556103`*^9, 3.953366014144208*^9}, 
   3.9533660630347433`*^9, 3.9533661034217663`*^9, 3.953366278684917*^9},
 CellLabel->
  "Out[164]=",ExpressionUUID->"9f3905c8-98e2-4fb7-b54f-ce2c5ec5667b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"WeightedAdjacencyGraph", "[", "ca", "]"}]], "Input",
 CellChangeTimes->{{3.953365977733646*^9, 3.953365988244109*^9}},
 CellLabel->
  "In[165]:=",ExpressionUUID->"f1eb081c-4138-405f-9392-58657d8a8e62"],

Cell[BoxData[
 GraphicsBox[
  NamespaceBox["NetworkGraphics",
   DynamicModuleBox[{Typeset`graph = HoldComplete[
     Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16}, {
      SparseArray[
       Automatic, {16, 16}, 0, {
        1, {{0, 16, 32, 48, 64, 80, 96, 112, 128, 144, 160, 176, 192, 208, 
          224, 240, 256}, {{1}, {2}, {3}, {4}, {5}, {6}, {7}, {8}, {9}, {
          10}, {11}, {12}, {13}, {14}, {15}, {16}, {1}, {2}, {3}, {4}, {5}, {
          6}, {7}, {8}, {9}, {10}, {11}, {12}, {13}, {14}, {15}, {16}, {1}, {
          2}, {3}, {4}, {5}, {6}, {7}, {8}, {9}, {10}, {11}, {12}, {13}, {
          14}, {15}, {16}, {1}, {2}, {3}, {4}, {5}, {6}, {7}, {8}, {9}, {
          10}, {11}, {12}, {13}, {14}, {15}, {16}, {1}, {2}, {3}, {4}, {5}, {
          6}, {7}, {8}, {9}, {10}, {11}, {12}, {13}, {14}, {15}, {16}, {1}, {
          2}, {3}, {4}, {5}, {6}, {7}, {8}, {9}, {10}, {11}, {12}, {13}, {
          14}, {15}, {16}, {1}, {2}, {3}, {4}, {5}, {6}, {7}, {8}, {9}, {
          10}, {11}, {12}, {13}, {14}, {15}, {16}, {1}, {2}, {3}, {4}, {5}, {
          6}, {7}, {8}, {9}, {10}, {11}, {12}, {13}, {14}, {15}, {16}, {1}, {
          2}, {3}, {4}, {5}, {6}, {7}, {8}, {9}, {10}, {11}, {12}, {13}, {
          14}, {15}, {16}, {1}, {2}, {3}, {4}, {5}, {6}, {7}, {8}, {9}, {
          10}, {11}, {12}, {13}, {14}, {15}, {16}, {1}, {2}, {3}, {4}, {5}, {
          6}, {7}, {8}, {9}, {10}, {11}, {12}, {13}, {14}, {15}, {16}, {1}, {
          2}, {3}, {4}, {5}, {6}, {7}, {8}, {9}, {10}, {11}, {12}, {13}, {
          14}, {15}, {16}, {1}, {2}, {3}, {4}, {5}, {6}, {7}, {8}, {9}, {
          10}, {11}, {12}, {13}, {14}, {15}, {16}, {1}, {2}, {3}, {4}, {5}, {
          6}, {7}, {8}, {9}, {10}, {11}, {12}, {13}, {14}, {15}, {16}, {1}, {
          2}, {3}, {4}, {5}, {6}, {7}, {8}, {9}, {10}, {11}, {12}, {13}, {
          14}, {15}, {16}, {1}, {2}, {3}, {4}, {5}, {6}, {7}, {8}, {9}, {
          10}, {11}, {12}, {13}, {14}, {15}, {16}}}, {1, 1, 1, 1, 1, 1, 1, 1, 
         1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
         1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
         1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
         1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
         1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
         1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
         1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
         1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
         1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
         1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
         1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1}}], Null}, {
      EdgeWeight -> {2, 0, 0, -2, 
         Complex[0, 2], 0, 0, 
         Complex[0, 2], 2, 0, 0, 2, 
         Complex[0, 2], 0, 0, 
         Complex[0, -2], 0, 2, 2, 0, 0, 
         Complex[0, -2], 
         Complex[0, 2], 0, 0, -2, 2, 0, 0, 
         Complex[0, 2], 
         Complex[0, 2], 0, 0, 2, 2, 0, 0, 
         Complex[0, -2], 
         Complex[0, 2], 0, 0, -2, 2, 0, 0, 
         Complex[0, 2], 
         Complex[0, 2], 0, -2, 0, 0, 2, 
         Complex[0, -2], 0, 0, 
         Complex[0, -2], -2, 0, 0, -2, 
         Complex[0, -2], 0, 0, 
         Complex[0, 2], 
         Complex[0, -2], 0, 0, 
         Complex[0, 2], 2, 0, 0, 2, 
         Complex[0, -2], 0, 0, 
         Complex[0, -2], 2, 0, 0, -2, 0, 
         Complex[0, 2], 
         Complex[0, 2], 0, 0, 2, -2, 0, 0, 
         Complex[0, -2], 
         Complex[0, 2], 0, 0, -2, -2, 0, 0, 
         Complex[0, -2], 
         Complex[0, -2], 0, 0, -2, 2, 0, 0, 
         Complex[0, 2], 
         Complex[0, -2], 0, 0, 2, 2, 0, 
         Complex[0, -2], 0, 0, 
         Complex[0, 2], 2, 0, 0, 2, 
         Complex[0, -2], 0, 0, 
         Complex[0, -2], 2, 0, 0, -2, 2, 0, 0, -2, 
         Complex[0, 2], 0, 0, 
         Complex[0, 2], 2, 0, 0, 2, 
         Complex[0, 2], 0, 0, 
         Complex[0, -2], 0, -2, -2, 0, 0, 
         Complex[0, 2], 
         Complex[0, -2], 0, 0, 2, -2, 0, 0, 
         Complex[0, -2], 
         Complex[0, -2], 0, 0, 2, 2, 0, 0, 
         Complex[0, -2], 
         Complex[0, 2], 0, 0, -2, 2, 0, 0, 
         Complex[0, 2], 
         Complex[0, 2], 0, 2, 0, 0, -2, 
         Complex[0, 2], 0, 0, 
         Complex[0, 2], 2, 0, 0, 2, 
         Complex[0, 2], 0, 0, 
         Complex[0, -2], 
         Complex[0, -2], 0, 0, 
         Complex[0, 2], 2, 0, 0, 2, 
         Complex[0, -2], 0, 0, 
         Complex[0, -2], 2, 0, 0, -2, 0, 
         Complex[0, -2], 
         Complex[0, -2], 0, 0, -2, 2, 0, 0, 
         Complex[0, 2], 
         Complex[0, -2], 0, 0, 2, 2, 0, 0, 
         Complex[0, -2], 
         Complex[0, -2], 0, 0, -2, 2, 0, 0, 
         Complex[0, 2], 
         Complex[0, -2], 0, 0, 2, 2, 0, 
         Complex[0, 2], 0, 0, 
         Complex[0, -2], -2, 0, 0, -2, 
         Complex[0, 2], 0, 0, 
         Complex[0, 2], -2, 0, 0, 2}}]]}, 
    TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1: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
zUwX+t8LBXzyZqHrnmPvq+YunPFplqPrsnDNdJfT8I8uqG3ZQ5sXZSH4UbBc
YUoXqvTkL4z1MBH+wWGjXFIXJm7uk1BtoqFZhZs/IKMLV84t/t0TS/iBRFjt
0xxifz62PKVqTYN23u/+veVdaFp/Xz5CjgYbU0d7QyKHkuf8mnVmqHj5Wdxw
Znk3nmZnXfQvpsKHHWTEo9INMfVNb66HUmG7dXzhnEs3Yg8MCQiaUsHtklha
mdMNuuX02CVuDjoPHhRcGCThRV26OI3Dxh/l2NvdWn3gW/VYbYTGBrs1aNYx
pQ9L2O8mNKbZ6KdLpLiK9MP1vq+mwBQb/3FP6f106ceA2m3BQ8R4/o1lXtzt
/RA6ucu3jvj5e/x7xgRVyZBdrhZZQ9y/+vWQTlwcGfEPOn/aXOLg5f0ise/i
ozA5s7y53JoDnjqfhzEPR+EgeYQr8CYH1zWemESQRvHvQWDfW+K8j1p5frQ6
NobxaVoOXygH6WND69vixuBXMXc96y0HO5qZO7IWxvBZZ63rm0wOhr02o8h0
HI5Sv8Vzyzn4NTvSX5Y1jgrFJZHsdSwc2D+4eaq8B3rSwa8sw5nQUOBYjBEe
aaY5rCMpxMStz5apEdy9eJJQ5BfgT5wz2eeUGvVeRO82ayAtYcDk6hqq69te
cKsIbLvnScd3MaPsPQIkpHuuTYrnouO/Tj3RtQYk+J3jpL/3pOFIZ9GmUx+I
a9NOXU+xYfA0N3wIiBiE6cCN4jqJIXw0fyfcTR2E/RjDZXHPID6tuW677uIQ
npVIGr45MgBhFZIys3EIH0qsth4+R8b5M4Hi/xkNY+m9KZ4rzv3onzzB8CIP
g5FGO/Mssg+nNwpsCL8/gpYX62WNC0nQErN6tGTLKCoyNxiu1GZjpc427ZaB
dsw846czhdmoc8q7HJbWhj5lfUnFehaW6NgaN/i24mikwx3GUxaWbW1y17Vp
QQLbK9j4FAuXhB43fTRuxmyeA3/AEhYaD+Y2+Z5vQnBK5o30HCbSmhaGH11u
RHLAVaF5Oyayfu3ZttO9AWnxrsEOK6iQePlDnDctB+bufdcEf1HgBoNtrmez
MRp2adVeOwrKaoYqfylkQKp1e9ziWgq0OoPbr6Sl4ojWZa6b9wneXngkynPv
E1oHp3+uLZ8C/6z5b5eqD3AIeCpyfs0U5L94TXh8isP+UO7oGNNJONedkdq2
MwaLJWlBDyfY+H2mdCwvtRMlhdzmtl1smK+KCcVoByrH5bVnytngJK+5uW5n
B1xUR1QPZbPxsSnFP8OmHSrGBt4H37DhF2sV7JPahlvnanL/+bAhJcX9Y5bT
CqmLI3UxtmyIylU+fazViqZW14Xtumw8PjXm/zC2BRaeyUL7Y5k4sU1t/drk
CijMqxZnejDxrty9puJyOY4m/vmoTuQfJW1T5+K2MnzUDfRjKDORKz52zYla
itlQJ83ONUzcmA39XV3zBybrY/tWTDJQqtTL+zevBK9wW/89wU8UN3rMQnYx
2muZ9zNjGNANuTYhXPQbutddec0/sKBUfczZVb8fXk5t6RUaLPCk3PDPESHj
3jOx9dxjTEgdpL2gdBL8fn4XRyGSCRr73OmPaQMonAmTeKnOhL+p77nLQYMw
qbHTuchhwM5vS0iU4xAW+MS5UzMYuPXzqkupyTASeal+WbcYkL4zccVKewTn
O5bLRKyh4kFLw4hvDw1C9g0XXdopWJWqklhygQ7Th3Yp5xMo+Be7+0ByK53g
lMsUA1cKTr7YwjNhzMDqf5+u+5+mYNfJqh1HOxj4FRcUL7SPgg36G13OXWJi
v1isM3M1BTU/KnK6yUzEiG3Pfz83jYC4hv4QO2IfP6Tob61n4sHKubczc8T6
rnDccJ2Y3xTf1RIp6zvw5LRrgFgsAz9Tr8twn2mHvdeeiOeLdHiFKFAdE9sg
3/mf+0GCe00XOkgXxNsgIh8UY1JAA6P29pm1aa1QXv1W4RLR61HLV5j1WBDr
bz++L/EeFWVHsr8P/teKZO4uke8sEgpP3K557N+Mw/YNYxssepFoJZNNcmsG
9X1ZbV1TF7Ik82riA5tRHFTBu0GnA8dvfpLLy23GW8FX9U6/W6EgxH9pxfIW
uAjf+mKMZoQVnLd0cG3BFx+qme7vBihr6pCf87ZCpy9T8K9uHTZdD9NVTG/F
3Pbajeu8WPCSW3G60qod66Z1vz4g+kr408C6+TVt8JFtXMf+wES6vYv4nbYW
3N+cMPpXnonI9q/7pjKaMfRKivFfLgN1Ncbi6z404ZvZ+iVeRxmgPeQ6GpLS
iMjQHz9mC+nQmjkgPVTVgI7aEucRNcLTg14jYWkDzrnGFVw9MoIc+4iXTnX5
ULOrqihUGgZ/2Z9PXet+Ymjdw7JDckMIe1Npa/w7F3ynScb2koMoNKAvP9b0
HToNEssZBIdIOLmtzdf7BhXH0MXbvGQ8DtcrzJbLRodjWUQwrQ8kH0Wb+ntZ
kPZWmu7tJfIv10v6gVwW4i3PPqVpsTG3cvYGCN9oUz4267OKDb4lF0bXpJPA
FJcObO5kYcHr2jaZfyTkxaou5U1iwVxf/t3pU32Ye1u5Se4uC2lUT5Yp4cGG
bMoZl5MsTIkxitfP9oHH9L+B6Q0s8JcUjZwx6Ucpraj85yQT1SFHXtXk9YMT
J71/6WvCi8T3ztM1R7Bx3+Dckdt0HFQumbifOgKZrZpNbF06pi88tarfMIr+
pCVXdHfREbdXxSnbbxTKJz/nn+an4/em03ND7FHMvpB2Ex2joczgJ5+kwxic
BaRvpdXQsETE66cUeQx5GwMHZb/RUMtz62OC+TiqHFfsWhLLgl/VPSejS11Q
WKdGuqLMwl23l0vtqjtx6kC5y5YGJhL5KwZ4znSCdNrulhuR3y2Ub7r2Qx3Y
9tVRKYWbCbsKzd99YR346m9Yx37BwIOtsWPRpzugJSDa+FKWgRTutTe+b++A
mbSQSv1vOvJlr3YZC3RAapfF2fDv4zj6RVBdTL0dHhfyzD71jeFKmf+KU2hH
wHT7yVHBMfDyR7sIE+dv6/mH72oVRyF/7kqQ6Z125B3qiOmwHEHXx/gjG9Pa
4a9OSvUPG4aPdrWxzHw7ItSY184VDuHIv+MJFy53wGRGgS+XNgiSVir37eYO
zOp5ynpaMcFZ9VhfN6obPm1ZjYYENxdagt1m1o2fh8OSP8/TIUOpzB9X74bu
kYurJwmv/dZQWhuh342JpoeuPlE0SLc+6fx7vxuHDBzXdJGpSHo4stm5shve
IS1fLh6g4qTQooO5ag9eRdMu3vKioOrILkPt+h7kmdjXW1p1YmCB/5Q1k4x8
GcaTdyltmKeMqe0/MwCxmpB99gvNyBcjsWJ+DGBImrPsnFkjjoGv6arSIKhn
9lSPltQhf/tsyPHiQSz7bn7Vyb0KfNePnB+4NARVx8I5t4C/UGAf4p4kvEK/
yM28O/c34mY7zrCLh+Fqorol5zELc4MNKZElBI98Lb1FJXioKFReMU2yD4kP
XM2epTFh8LLXvD24D2KSfEKdOgRfL5Z0NS0S+3+oU5p3lIEss+T4iw/60Tn5
56XWEwai64KndxF+GVqddJ+0j4EWuROhY2GEP4zqjHMTOR7j5sTRkSE4psTx
xYZ9U4jOX7die8EEpp7Yv23xnUSJ4uZ3ZZcmwWhzcLo9OAHWPe1OI74phPk0
zevpTeCA2E9v2+wp5PmTLhf+GodEzC56tP00+rvPR25VGoeVcGzCEYITOCEy
Bj9yxxCQlGlWfYcC1ZRzTd0nxohceNmq0UFwRWojr9vfXhSWVuvX+LHx+ui6
i3fO96JU8pLpwUtsWK93WF3a3gOrXYf0BJQIri3yLMsw7oFG4H8mVv/LiZ2H
vQNquvG6pejPhUkW2naKuUcf7YZny5+JxQoWvkzLkJUIzjddNiFpn8zCloc+
FQWCXfDviMtODSK4SU1088DRRqwIOWaYMMTAZn5F6a+vG8C+fcKlsZzotw5R
U0lmPdq8h+TnUxmIizo3GatVD+1VQ44HohiIP313qf+LOqyESJfnIwZUNAY5
oSW1WLY6aJhjx8A92b0nnp+tQYpcf+57EwZsns/O/2uvQupco2yIFgN5B9rI
N3UHkXolVGKEmw2T5KURtk5DyND7nvookwV2kzK/55NhcG7ebZO7xIKOmPMn
kdgRSPH8ltjDw0KE5+fBO4mjcEnbsCTpLRPSRXtj1iSOQTsGjSRFJrQKHzue
fTWOk49yY9aUMfD6jvi+eN8JRIYLMjzPMRCwbntpRgTx/d9qoYNu40gePJK/
iYeJ5u3MG8U+BM/vNjD2t2ei7VEW339E3r25J74zq4bIo02PVlV6jCDQ8eId
mz0s5GhuFpdxGEY/Nf7SDU+iv9477pwwGEJSz0/G0zoWRIQ8DPLlBrEpkWYe
v4ENnukgGx2+AWhsHrl2fxcJ0pvzrzuKciC+RjRbcqITpTcKA6cobHTludrE
B7Ti6hZlTWNxDpbnU7OlHjWCucD4bRnOwffr1QNOW+tQrrqnjqE9g0du57oM
TSoRMPtwqkZxFtG3BnZ7fC6DsX5l1qcT/9CLUS75G2V4frGUFmsxhyCnf0dU
31Xg86rC5CKXeUjNV55dvrUWqedceNttF+BYNzZ2508Dvu4/Uzsju4gA9Vx/
78wWRKqsVODOWMRr5rVDy4U6sTXrV37++CJ0ruZgj3svgjTFvvxqWQQzqfnc
j/o+8MYf4Lx2WYT4p6RHZ16TsdNvSG+6agFXud1EqJwB9J7jv50wMY8MAx/9
7CrCN0b4Y4QH51Bp+97+xDLCM7IVbL0q/kH1xuVrmz4QuUOtXVubMYu9p9+f
7ksegPSiaviTzBnYCbZL1u0j4/7Hu5tsSByg0LNAVa8P8nJa/JnaHIReLJBs
KiOjZPOq2yFnORgyyMVACJFzly55OJlycIe3TuTBuUFE1Wndi7jIwTq3ky+l
Nw7hoI5FKMOMA7tqnTrHniFcXPEjNcqQg2jPY8O974axNc007oEOBz4Hp0KX
Wo8gLWeWmaLCAZ+gwRGHnaO4ZbxTaL804X1uwidUiHzmkLS5u8ksHO660d10
nIZ/tGZOIXFedQ/6b9oST8Ps95S0NV9Y+GwjKdczT8ON67w5Q0+I89vYvLvH
hI7SPpaevhUL9byP9418paMiwe+UxSEWYq8re/3lJ/hn23rxQwIs9E48/qZ1
kYFYqytJ1BYm3l5IOfgnnQw3WQeL+DyCIzxtxSrsBvDI65i0ixkLyzfLrb4p
PohDrDqjMTYTq/VO+xr8HsQBbtv+o2FM7JuvTuC/PAQ/zdDdaVJMvJknfTpE
HcLRsfc997IZeCNP4gl1I/ovWrGFfJwBwRO+YdmMYazN4hqTraajUCP5wdZH
U8g/e4dqe3MMUwmeP+ump8AlTc069XgUrYHOzLLz08io1W5d/mQE+SaKl6u+
TCPiiJ204tNhQKDhROLsNI6I9EpdCyPW4ZhZZORmCvzCR77Khg4i/Ue33Qsl
Cu6HSqfLBA4g8RbRmacoyBNf85niSYbL3kJbJ65BsBi/Df1L2DB75OwesnoI
TuSt0aEf2WjbffxQ+Daip4yNfJf9z6OOFBzo2DsC5zsO0stM2TBKKZCq+G8U
dp8+XUjcxUbx3U0Wfw6OwVunu5ibzsLBx10y/x0YR8+cTcGhbyxU/fjA91Bm
AkbtG7Rv3WZBVJbH7AeRq3c3iPtMvaRhulbH3u8Yk+Cylh2nDWjoGQ6XS89m
4p7ZoV6eJTT4hH8i0XewIKkiJqScRsUVznm+lREshK3epC1hRMU5o/dvimZY
cDmoa0RhU4DiZvUaczZa1IbZvZEU3LXKPTObxya49HzzLlkKpJqGf8Tt6cP5
xPjWJbxsVOze6e6o3ofN52vvmuay4PNCRH/Z+T7IrfuUqeDIwoGXc9YWF/sw
e9JTqGA7Cy8F7FVcL/chwZO9T7qViTkbnWBN0z4sxvl0RwUx4cHOcGwmzpuK
9WyTqhpxfUZUTUalDyFufBmaTAY67xqs1uvvxd4/ktrGzRQI/O3rfZbSC/Hc
wRuUJxS8GVL7+MqmF5uKPw5rHKPgVOffxOB1vbih/ewTF3UaYp8NXF5868Gf
Jx3PX1lMA5KuJIZWDz55j9xLa5qC4vHxpsHqbmzY8KPsqc4UquSE9mWe6AbP
nKRmaPEkpGpWH617SkZwinP/rwomtvFJyDw/OgBuMlhL5JgIu9ezsLdnAI2/
xmI1nhK9cPesxiHHQRxbUu/YM05Hxoe8VKupQYx8bth54ATBxXYrza4SnLOx
b5nbu1c0KOhRZ2i/hlAle67k2TThWXnjrA6hYVy8Rxm3P0bFiQ9HDB9Sx0A5
09YnZN4DMvUE56ncOMEXiZYJrzuRlWzjmUhwcV10xdF1bW0wa/U9+pHoJam8
F3M8Ii2QvCD5ytN7HIkuZ5VWnWzEzfkju+U8xlFREZYwfL8OEe6rkzOvjcM6
cUDV1LoSEKZwb1YdByMuUH1l5x8EU9Q+p7YMQGWqXUBJlYWsy6tn77cPwqqS
XeT0i4krpPc6mbVDWGVk+OG5EhNLy7Wbf+cM45O8Jo39mVi/q8avJSJHcKCu
0nBUjAHSq4ZfOhajSO16+bXAhw6rVNPCv1vHYK1xcqpxlIb1F9Z2SteOoW5z
3B9PHRqa9tcne/PTkPBLg578ux8VDx5dcDYhfNX/72PW/T6k24m32sXREPQm
zZwuS4K8xSdfLRINL/eaRdZkdMPxRX0keT0d62ijzUoLBL+/V98grkmHw9+s
pz/Rhn05CuKNN+jgzetMnSP8lbRyMp0RRMfGJxlLYz83QOZg3Wvbk/1IUNPm
L3Hj4OCvgvdHk/uxcjP/9gdBHPyWcx36vZKMId/l58teceDMrtTOu0uGO3sp
580nDoaTWlqGe8hYa3Sni53FQVq4YO8KrQF0tNhoV/3iYANPocTUV+LayJd3
fQkHhRl8E9qbBuHzR/x8018OwkUtgsvnxyC9P6Q3eowD9eadIxY242hRrg0u
Hefgle/j7+yGcRxv3TJ4lRhvP7vYc0qV4M8tbnk3hzhYuWyD3daPE7AgMyxp
vUQ/XbBK/09kErPRdt9HWzgI2vHrno7bJPYfllx1sZKDzzEiMtK9k7gWnnHy
HPH53lj+3k95S8LoxZ05pSIsrJ8Zu+UaToL7iOGQQCATpI/y5cw7JPAY7z5b
R3gV82ydx309EkhbPgldv89Auf2mAIkNJFjbjCZvYdGhnBy9wE+c33h/1rqT
t+jYsD9sZaxwL/h+rLPYQ6FBkYftamrSg+0dEeHizjRI/jkbkxPTCAWT1PND
nUN4btumLkh4eY/mr50upEHkZm8NuTFYDxufE3oaYwMY79bhthmuw8Jf/4CR
GTL6TU8Kb0+oxRM1w13TxDoZ3d8gsvF0NYKZVd/79/Zjrnpq8/qaClhsN3qn
bdCHht/bCl5IlkFLlH8qwYOEgJRHf7u5+zGSMC75I5kJ059JH96d6seZmwJS
W/mZaL06Mpjq2w/4TepPXmVgbWDxXlJaPwZu8nf55dOhMDnvsbmiHz6vA3L1
NtBhl2J1xripHxaZF85+uEmDxiruKP+aftAUSecmK6iQ1k4t+JrTj5IvwbeD
pKhQaZv8x7+mD1FL9YuuD/TCwfY0+9AkCRtii0vy9bpR8XbXzoDvJBRWqSc+
+NEBMTcJozW3SNhL75fcKdeGA+SB97ybSUgMK3RXS27GJ8Hv7Ztu9mLkqYnH
yX2N4CmMMmkL7MHvN04/vv6sgyOfbkaJTzcCyGoHRr9UoW6PX0YUkX/LLHcs
SyJ8o+t0uGKm+gDCyuYbdpmxka0WWmFPH0DD3uINVnvYiAhkXDV5Q/D5dpdt
t9mELzBP1a7RILg2nv7lTgELH8jrJw4PDGFTfONAsDcLEkmUoZsPh5FgmnW0
S53wutCkm6arR9BSr34zkIsFBwO9WuNlFOy3OcMUkqch7Yv0sxk9CkiJrC6M
UhFDfr1kazjRY0OHr21/S4XDL8nLcXUULMaynEgGVKTorxAyEaIies+ZHx+5
qfgrWZ26XYN4vZ1W+jGVgiXew0d7Xam45v/y26oLFPy+8FjM6SMVGrRopQ3c
FMhozA1+V+rHnhXLJjbbshAl8JTHPrwfuxO+X77HYuLqjab4+d5+PJg8XlTn
yUTPpN7RY5JkZH8PlLQWZCJ5fQSvsBkZdq803j9+xsAV3r6x4/5keHc+Vr1O
5GEqf1bJn49kCLpHJ1jEEd7OOnLW+ycZV4zyxXJ20CH4JDVUMXQA9KBZ4czc
EXwyUQ3Y/mIAP2cmzn0ifNjBzTdBKXIA4XcV4u5VD+E/j/w4V98BsJSvfstp
HcQ7nTcHxwleuyj8bgOzfwCSZrKb3mkMwE8lMKNwmoyc/W6LGasHYPXgrPfn
hX7YuEs6H24mYzffCy0NkX4ILC3rvh7Si4BLZVfFv7Ngt4Xa8ImvF/lbt21a
Z8pCENcfMXnHHly8XsyuWGDCOeT63PmSbuxL1+N1TmDCN99qucfybsRcer5L
RZ+J7n07+tcd7cLpzHMCF2cYOLnFkRFj2YnMw88GBT4yYJC9RiHIlcjpjmk3
F2MGVhwUijSVrIB4x9FNpXwU7NVn/N0lV4YAvrXCB12m8bugvHXlllLohpSZ
C/dNETlP4T9JLcYb/VwNp/NT8Bq0XrouuQh7L57i/1wziYHd2/dnPMtH+VxP
h8iZSWRdi/4z9T4Xs8yxr+NtE9jkfY2/xj8LJl0xG7xsJ/BwvXndtsU+8FWH
JzZkElx07PXOYP1+3Ai1dWdHsrGeZ7/TcAyRI0qPvx1xYeNspO9NvoF+uNzP
z882YOOKtwP51y4yPrf4L3GVZSOjrshjwJ4Myr+3s8+XsXHoaafouWSCL0Tu
rtpFYsHWIy9rYIAMVc3ut5rEfNOlfjb+4h0GK/fE/Ht7BtFLU5WnDw9jl/R7
JetjDLRabKgpujGMYla0xKAoA+++rJ1jvhpGWaTSPZVROt5Ff5it+zMMLbtf
3x7/oOMBM55bZXwYJy9MjTQE07H50ecxMaERjO8UytK9SMepvcePXpEZwbfL
7ocFZOnIj+3iGc2kYzvXCU8XZcJ/NSk6cQp01G8K8JpZxsAtq7ynMpk00NPc
3D5303HoOa97jRzBNVGmTu9z6SAVy1f1JlNhJfH0J+sVHfO7ZI9+JnIt4CGd
+o3o/3nPDo3HsRQ0JLg3Um/T0Ta7OJwqSoFKB/fpr7Z0mDs/+Dy8g+DDJY9n
/vHRcWyF/mK0KAnb29gSJ5fQcSBgneIjgR7wSv6W3kyMq7uSH86MdYKH2878
0Uo63P2OJPVXt+NGVvx/17fSsWd1mMj9rFZYFgcfqzxIx8t/9cNccUTvW53T
eHOWDn+x9bfTwhuhOP1vd+0dOmwrn9HVbQg/j1l6LpSYhxUhX34qvWDhx8m+
FnVivtaWH37KLmLBj5O9pJ6Xjqn9r8XtRlhYs3JUyS6ZhpE8pTduAmwcnhmc
0dCn4RXX/ISwDBv6x2+0vaBQcTDxjLf4MTbyNmvqxIRTsTXKIfipIRua4Q4h
PvupiFuIiZwkvJGV+qslIncYGnZGjJ/XOJAZv/A3iT0EESMD/R5nDmTz7Wm3
FIZQduuR4ClXoufn/CasnAehNid8aZHglrsH1CponwcwpPdJffYOB8VLb3WG
DZNBahX0U3UkPPbuZetMIrdWi83kVltwsLqp07LmSj9qDlAys7cxkKO8i/65
k9hfyvQE2QI6LDmdI+WNDJj2Xv9lYU4n+Ic6nljHwJOEve7BMzRoCrW3ajQQ
vHcv+eJIFA1btR99f9dG8ICEXEOaAg0XP/b++UlmoLHUZGFTIxXVsXAOpjOw
2vzjR9tbVAgsrjblJ/o1td6Lu/LECHzuUKzMdVjIECipe+43DM+rVjfcrhJe
YxJ+dknFELzehHzb4clCA9VE1luEmJfpg6ln37MwsYlx0Nt0EN9c1DeMl7Pg
n/t2n1PSADLSM8XaGCxM0vf5p8+S8URB8hSXFBt2o7FbUg2IeaG2/9I0ZuPa
xHwi04YJw+NyWaUG//u7VtWx+XYGDtXcPZanwYLZz7V8XREMrM8o+P2YWLdj
Ccuuz0UzIDDPf97QiYO8jaKzQ+MMSJQJRfx+MIPM2dDQU75M5PRd79GwncWK
KzJHHlxgYUDmyOGO7f/w89q35QYmbJB8jXUtXv1Dzr3OFktifeSidpaklP/D
wOerob5+M3hCmlRXTP6HqAvPmq2CZnFmMkrkKv7hx/0bVZK2//D50/wVw/BZ
sHceUCIJz8H7cHGj3pcZ8DhHRf1zmkNzCHPLpw8cSAsKS6zynYNWvd+HkCA2
xicLOn1156D5hifd0pWF45qC0x8r/iH5wfoTch5MFKp+/Wq6/B+6NOqOc6UT
67/NmGq4fhbUQheRO1sZeKG/S2TZshk8NO/e+LSFDqcF55Zdk2wkoESns4MO
I0fFMwq9LIioOPYs3UvkRxkeZFGZ2P/dtZBUzEBXj8frGzFMtFmTn2k60BHq
1ss1EslE4H17feWlRF5NKkY6PSH894GIV9AbGs5WBgUK3Ce8TDhsxkOZhmyO
1kKRNRN64WbbdIl91bKllRGvx4R6RD15vxPhw5ce6+US3sZRLPG1I7igxSP+
18YVxP0yLbzlPxP+K1ATXMFDcCloh9ZnDCHM2DQyoJOG81OGwvvpg7jtnHPz
RxoNAsLcxdrKg/CXWlzj8YgGnk23uOs8B9AcESM4RnjLzCx3k1wd0eOxlu7b
VtNwhDF+rYE4X0NZe+c0mqno5/D/2ezRj5gh8mu3SCrKua4muHT1QbPM/9vx
4ywY71MJkL3LwFO2ZXo5kT/uXdqFZw0Y4HMp/PgohIWu7ufpSbuJ+fqtTtJP
Z+Gy1zPVkzwM6NQV/dpez4I8/e4Z9TYivzpd6oanWQigCZTnpNCx1+8hKUiI
jXOvWI6Fj+hQOvSVMy/NBn+7e7+LATEuen8XK5iD96EXZE7kURBw3ipeOoED
ilFgQxHh29ZrIqSX/eAgcXZt83ZTCr4ErvjzpIaDzl1vZnxkKFjnxzedQHhG
90qzY4IT0zDKSPbWn+LgbfWrK76+07j7U6r5/iwHaybSebM3T8O+reCLNO8M
/Io4H1qzpiDx+tXlTqL3v/VuEEjOpuOk3lF5FW4GZPRm3my5SodZ8s6MvEQ6
Cl6P9DSvJXLopuW9CC06Rs4lSS5U0ODw6IXWzBANNypLdhT70uDXJDgk40XD
Uu2Mfr0TNNQV2S65KEbDV94An5LlNIR524o2plGh5nb9lA6xX2KCxKRfuw4j
7W5Jh9n4JL5NSJo/iR1CgIr8wdKASVyqiCv6lz+I0BK+H+Xyk2B179nk0kX4
m8wrnxjyBDiUoCB3Fhled+Y1rOMnkKitoxK5goyLQ+P7zttNIODZmhX62/vh
4RXb7XN0ArWLqw0OHOzDqr7bx1ZvmcCWjV8l6IRXTQ4Or7V6QAM1L8+/+iET
gl22W8raqIQ/hz6ptmfCQmN3+eBBKtZfWWG7cIYJeRGO7+ZICtx0C3ic9xGe
Mg7VN8PTeGzoWK3Iy4TqavvZjOQppEzwl9sTuewVXTSscIvgn5wm570vGdjE
eCfQTXweZZX1MzOHqYjf1XDrencLnngcOWDzj4JXgs6izl5N6H+cpZScScE9
0UProhQa0EJO9B6zooCPpn/txlgtNFXUvxmvpOBopPwevaBKuGafYmhZT8NO
Qk7cUv8vFuzTq4TjpzB32jF8n2IxwbtzP+7UTsLKLuLC0Sf5OLtby9hSloWY
nQaq3VM05A1nUtR0WXAs2Tb233UayvVvpodZsfC2K7JWsYcK3eWB+9XvshCt
6rhc6TwVQikhM3pED3A2vtT1K6eAM1n7MNmX6A2fv9/uHqVAI1Z1rxHhHd//
fDycTXyurmWjlmfvscB7mCef32AK4xt13PMrmfh3zts1na8HVtwvn4r8ZCIk
ziTre3cnlKPEa4oIri3IrQ6zzmmHyYUVdr0BTNwdt9PhiW6F1A5vj3vXmHj6
V06h2qMZMos68x8PM9Ec/IO91L4R1l+9Ux4TXlAXGtc2dKUeLd70FduaGXBI
+sDQLqpBfNXKOgwywHuvUMVuNxMPop6ceJfFwIZ1B3TUDjJxn2X6MNqHgdtC
2o9sjzPhJVExftSQgeu8sit7iH6K0K+O+irNQMfb442RVwk/t3FYKTRDR8/D
KH1vVya2ajqb21bRcZq5Ois2hImvCpbjZMI7Dv55MNlCPFfvrU+RW49Tce5j
pff0/7jFSXZ3/XoquGM9Dx3awSbyu7ChYYoCx7uzHd4EtzyPJzce+UtBqvDc
x/zLbBwN/xUrHU9BoYlfXusjNp4GHPqV+IACQx2HVT//9/+GQV9qGgjPuuYc
+cr4Dxs6RcI3C5QpmPTuUH8+xoY5OUBsyWoix168GXP4TZxnBYkvR5Po8O57
JFx7gIbAjO/TX5XoCOu29biZRIW6fpXv20IaavfUSSZKUrFE3nlaT52GvRnf
4n98oCCqIvjyskIqPspJbZrfQ4HJWcbTjUpUzGRobbO6PY2eV+bPmpMo+JQ5
bHjk9RTyD4iP1Z/rQ4jGnthnm8iYU90qfFKWhP0i2z0vnOtH51UJ2/LZbuT/
nlP2ie5DcH5HRHFgJxw/Pr3qNUGCltXopwn+dmjucWvLPU1C7pddmwrdW+CT
Htcq7NuLtlP/NRV1NyJ0401Hjyc9OPo1+ZyHYj3SGWl159K7cSbg+uDMbwa0
ey2NLMxpEF63eOK8L9Gzdgq65K9U+ISteRgKBqqEZO+FChDrNHqiu55KR8ND
OfofawpyKFfsdF/T8bzq85XmkGkcYW0okwcdFd+E074ZTSGrRmT9tw5ivpI7
+UZkJkFePNi83omGCdPOjZuWTuB6Um/0w5cj0OrRPPv7Whtib3ldvZc1jELZ
ENfA/1rQztolqvh7CA7aGR5z65tgZzOy5VjxIIQyaO2maxvwZkHzzoGcAWy3
5mtr3lWHDtUxxaR4Mj4k51dszazCjbOj+pqP+yE1bFOhpF2OLeMH1vw434cq
18fiM+tLwfw7ZtpC5J/tq9eH9AnfqL1MDzUnvPpV0c5/k7wMMB5aUxzuMnEl
k0djaQMdEbY9nBW2TMTKvVLOeEtHDWPZM80LTDiOF35Y7UhHezhNVFKT4ANt
7jF1VcJjYgLw+QAT4jPHpixX0FG7/b99E+IEX9R/EAjuocH7UGlsRAUdl3pC
X149Q4H2AbXyl1/pEBD8FJixnQLJlbGzd6LoaBKQ++ZD9Ftktr+6kjvBOeLM
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
GKpYlJIQ9z/sjSzc
       "], {
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
         ArrowBox[BezierCurveBox[{1, 20, 23, 25, 31, 33, 36, 1},
           SplineDegree->7], 0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{1, {0.9716717072186489, 1.0856283867008192`}, 2}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{1, {0.30921867142474374`, 1.4382971760070284`}, 3}],
           0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{1, {0.7564611117601303, 1.4763804996094738`}, 4}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{1, {0.7337788186016624, 1.0082646498131052`}, 5}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{1, {0.9322665438427301, 1.309920266596781}, 6}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{1, {0.3649973215048413, 1.0995394832630283`}, 7}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{1, {0.7096417685926028, 0.7331821048209031}, 8}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{1, {0.8997869183499991, 0.8610667343284057}, 9}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{1, {0.5354499946051419, 1.524458387439568}, 10}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{1, {0.2795120169529417, 0.8217708029631187}, 11}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{1, {0.4804836487440694, 0.7007540337532188}, 12}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{1, {0.7191657603635578, 1.2428886473038991`}, 13}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{1, {0.5155401697263364, 0.9187701415398942}, 14}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{
           1, {0.15841375761340595`, 1.0151141816679992`}, 15}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{
           1, {0.49024519816833095`, 1.2991029695616472`}, 16}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{2, {0.7175387593325891, 0.6482107681504399}, 1}], 
          0.019038177794150513`], 
         ArrowBox[BezierCurveBox[{2, 299, 302, 304, 310, 312, 315, 2},
           SplineDegree->7], 0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{2, {0.8471601502601234, 0.833228914711326}, 3}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{2, {1.2944025905955074`, 0.8713122383137749}, 4}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{2, {1.2717202974370418`, 0.40319638851739603`}, 5}],
           0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{2, {1.4702080226781107`, 0.7048520053010748}, 6}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{2, {0.9029388003402287, 0.49447122196731236`}, 7}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{2, {1.2475832474279887`, 0.12811384352520336`}, 8}],
           0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{2, {1.4377283971853754`, 0.2559984730327049}, 9}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{2, {1.0733914734405403`, 0.9193901261438563}, 10}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{2, {0.8174534957883252, 0.2167025416674131}, 11}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{2, {1.0184251275794516`, 0.09568577245751247}, 12}],
           0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{2, {1.2571072391989369`, 0.6378203860081998}, 13}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{
           2, {1.0534816485617216`, 0.31370188024418316`}, 14}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{2, {0.6963552364487892, 0.4100459203722924}, 15}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{2, {1.0281866770037071`, 0.6940347082659387}, 16}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{3, {0.3937347572379867, 1.3252412459066303`}, 1}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{3, {1.1858091839594278`, 1.1575906031613068`}, 2}], 
          0.019038177794150513`], 
         ArrowBox[BezierCurveBox[{3, 578, 581, 583, 589, 591, 594, 3},
           SplineDegree->7], 0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{3, {0.9705985885009113, 1.548342716069967}, 4}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{3, {0.9479162953424406, 1.0802268662736025`}, 5}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{3, {1.146404020583509, 1.3818824830572671`}, 6}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{3, {0.5791347982456235, 1.1715016997235117`}, 7}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{3, {0.9237792453333786, 0.8051443212814043}, 8}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{3, {1.1139243950907716`, 0.933028950788903}, 9}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{3, {0.749587471345946, 1.596420603900071}, 10}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{3, {0.4936494936937198, 0.8937330194236079}, 11}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{3, {0.6946211254848476, 0.7727162502137117}, 12}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{3, {0.9333032371043267, 1.3148508637643996`}, 13}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{3, {0.7296776464671159, 0.9907323580003864}, 14}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{
           3, {0.37255123435418586`, 1.0870763981284943`}, 15}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{3, {0.70438267490911, 1.371065186022125}, 16}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{4, {0.7762751651326469, 1.0904243463837173`}, 1}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{4, {1.5683495918540717`, 0.9227737036383961}, 2}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{4, {0.9058965560601587, 1.2754424929446035`}, 3}], 
          0.019038177794150513`], 
         ArrowBox[BezierCurveBox[{4, 857, 860, 862, 868, 870, 873, 4},
           SplineDegree->7], 0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{4, {1.3304567032370784`, 0.8454099667506637}, 5}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{4, {1.5289444284781561`, 1.1470655835343335`}, 6}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{4, {0.9616752061402576, 0.9366848002005936}, 7}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{4, {1.306319653228023, 0.5703274217584845}, 8}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{4, {1.4964648029854168`, 0.6982120512659888}, 9}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{4, {1.1321278792405756`, 1.3616037043771538`}, 10}],
           0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{4, {0.8761899015883634, 0.658916119900691}, 11}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{4, {1.0771615333794928`, 0.5378993506907935}, 12}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{4, {1.3158436449989834`, 1.0800339642414791`}, 13}],
           0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{4, {1.1122180543617586`, 0.7559154584774656}, 14}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{4, {0.7550916422488296, 0.8522594986055732}, 15}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{4, {1.0869230828037513`, 1.136248286499223}, 16}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{5, {0.4801651372612375, 0.7271533915201279}, 1}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{5, {1.2722395639826711`, 0.5595027487748045}, 2}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{5, {0.609786528188766, 0.9121715380810175}, 3}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{5, {1.057028968524151, 0.950254861683457}, 4}], 
          0.019038177794150513`], 
         ArrowBox[BezierCurveBox[{5, 1136, 1139, 1141, 1147, 1149, 1152, 5},
           SplineDegree->7], 0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{5, {1.2328344006067706`, 0.7837946286707707}, 6}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{5, {0.6655651782688755, 0.5734138453370033}, 7}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{5, {1.0102096253566257`, 0.20705646689489213`}, 8}],
           0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{5, {1.2003547751140182`, 0.3349410964024}, 9}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{5, {0.8360178513691743, 0.9983327495135582}, 10}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{5, {0.5800798737169687, 0.295645165037102}, 11}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{5, {0.7810515055080941, 0.1746283958272012}, 12}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{5, {1.01973361712758, 0.716763009377881}, 13}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{5, {0.8161080264903644, 0.39264450361387493`}, 14}],
           0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{5, {0.4589816143774312, 0.48898854374198264`}, 15}],
           0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{5, {0.7908130549323513, 0.7729773316356261}, 16}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{6, {0.8189569733171375, 0.8521077032920216}, 1}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{6, {1.6110314000385688`, 0.684457060546698}, 2}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{6, {0.9485783642446617, 1.0371258498529086`}, 3}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{6, {1.395820804580057, 1.0752091734553446`}, 4}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{6, {1.3731385114215708`, 0.6070933236589787}, 5}], 
          0.019038177794150513`], 
         ArrowBox[BezierCurveBox[{6, 1415, 1418, 1420, 1426, 1428, 1431, 6},
           SplineDegree->7], 0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{6, {1.0043570143247762`, 0.6983681571088984}, 7}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{6, {1.349001461412521, 0.3320107786667874}, 8}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{6, {1.5391466111699168`, 0.45989540817429697`}, 9}],
           0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{6, {1.1748096874250735`, 1.1232870612854484`}, 10}],
           0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{6, {0.9188717097728599, 0.4205994768089973}, 11}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{6, {1.1198433415639781`, 0.2995827075990916}, 12}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{6, {1.3585254531834923`, 0.8417173211497831}, 13}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{6, {1.154899862546259, 0.5175988153857705}, 14}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{6, {0.7977734504333333, 0.6139428555138788}, 15}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{6, {1.1296048909882548`, 0.8979316434075213}, 16}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{7, {0.2375512312267893, 1.0195048588005042`}, 1}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{7, {1.0296256579482193`, 0.8518542160551772}, 2}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{7, {0.36717262215431934`, 1.2045230053613867`}, 3}],
           0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{7, {0.8144150624897024, 1.2426063289638318`}, 4}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{7, {0.7917327693312417, 0.7744904791674602}, 5}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{7, {0.9902204945723109, 1.0761460959511358`}, 6}], 
          0.019038177794150513`], 
         ArrowBox[BezierCurveBox[{7, 1694, 1697, 1699, 1705, 1707, 1710, 7},
           SplineDegree->7], 0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{7, {0.7675957193221763, 0.49940793417526347`}, 8}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{7, {0.9577408690795738, 0.6272925636827656}, 9}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{7, {0.5934039453347245, 1.2906842167939268`}, 10}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{7, {0.337465967682518, 0.5879966323174737}, 11}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{7, {0.5384375994736463, 0.4669798631075721}, 12}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{7, {0.7771197110931408, 1.0091144766582618`}, 13}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{7, {0.573494120455911, 0.6849959708942533}, 14}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{7, {0.2163677083429788, 0.7813400110223576}, 15}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{7, {0.5481991488978974, 1.0653287989160076`}, 16}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{8, {0.2974614885304939, 0.520096924625229}, 1}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{8, {1.0895359152519268`, 0.3524462818799139}, 2}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{8, {0.4270828794580174, 0.7051150711861245}, 3}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{8, {0.8743253197934011, 0.7431983947885634}, 4}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{8, {0.8516430266349434, 0.27508254499219453`}, 5}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{8, {1.0501307518760115`, 0.5767381617758737}, 6}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{8, {0.4828615295381252, 0.3663573784421148}, 7}], 
          0.019038177794150513`], 
         ArrowBox[BezierCurveBox[{8, 1973, 1976, 1978, 1984, 1986, 1989, 8},
           SplineDegree->7], 0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{8, {1.01765112638327, 0.12788462950750473`}, 9}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{8, {0.6533142026384291, 0.7912762826186511}, 10}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{8, {0.3973762249862199, 0.0885886981422094}, 11}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{8, {0.5983478567773493, -0.03242807106769028}, 12}],
           0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{8, {0.8370299683968316, 0.5097065424829933}, 13}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{8, {0.633404377759613, 0.18558803671898816`}, 14}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{8, {0.27627796564668405`, 0.2819320768470917}, 15}],
           0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{8, {0.6081094062015991, 0.5659208647407408}, 16}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{9, {0.5263955355930691, 0.5101541616247882}, 1}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{9, {1.318469962314506, 0.34250351887946295`}, 2}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{9, {0.6560169265205991, 0.6951723081856729}, 3}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{9, {1.103259366855981, 0.7332556317881135}, 4}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{9, {1.0805770736975207`, 0.2651397819917478}, 5}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{9, {1.2790647989385835`, 0.5667953987754243}, 6}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{9, {0.7117955766006987, 0.35641461544166947`}, 7}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{
           9, {1.0564400236884568`, -0.009942763000447146}, 8}], 
          0.019038177794150513`], 
         ArrowBox[BezierCurveBox[{9, 2252, 2255, 2257, 2263, 2265, 2268, 9},
           SplineDegree->7], 0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{9, {0.8822482497010067, 0.7813335196182175}, 10}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{9, {0.6263102720487992, 0.07864593514176124}, 11}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{9, {0.8272819038399248, -0.04237083406813767}, 12}],
           0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{9, {1.0659640154594094`, 0.4997637794825476}, 13}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{9, {0.8623384248221967, 0.1756452737185351}, 14}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{9, {0.5052120127092627, 0.2719893138466419}, 15}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{9, {0.8370434532641762, 0.5559781017402934}, 16}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{10, {0.6269451273387261, 1.2603005866787225`}, 1}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{10, {1.419019554060166, 1.0926499439334005`}, 2}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{10, {0.7565665182662765, 1.4453187332396065`}, 3}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{10, {1.2038089586016403`, 1.4834020568420483`}, 4}],
           0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{10, {1.1811266654431856`, 1.015286207045684}, 5}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{10, {1.379614390684252, 1.3169418238293518`}, 6}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{10, {0.8123451683463738, 1.1065610404956001`}, 7}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{10, {1.1569896154341208`, 0.7402036620534842}, 8}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{10, {1.347134765191513, 0.8680882915609968}, 9}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{10, 2531, 2534, 2536, 2542, 2544, 2547, 10},
           SplineDegree->7], 0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{10, {0.7268598637944597, 0.8287923601956935}, 11}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{10, {0.9278314955855932, 0.7077755909857986}, 12}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{10, {1.1665136072050812`, 1.249910204536462}, 13}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{10, {0.9628880165678573, 0.9257916987724698}, 14}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{10, {0.6057616044549303, 1.022135738900578}, 15}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{10, {0.9375930450098459, 1.3061245267942372`}, 16}],
           0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{11, {0.00388082085411358, 0.8467005869605181}, 1}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{11, {0.7959552475755489, 0.6790499442151946}, 2}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{11, {0.1335022117816419, 1.0317187335214075`}, 3}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{11, {0.5807446521170243, 1.0698020571238478`}, 4}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{11, {0.5580623589585645, 0.6016862073274779}, 5}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{11, {0.7565500841996264, 0.903341824111147}, 6}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{11, {0.18928086186174675`, 0.6929610407773922}, 7}],
           0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{11, {0.5339253089495015, 0.3266036623352809}, 8}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{11, {0.7240704587068924, 0.4544882918427875}, 9}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{
           11, {0.35973353496204935`, 1.1178799449539485`}, 10}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{11, 2810, 2813, 2815, 2821, 2823, 2826, 11},
           SplineDegree->7], 0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{
           11, {0.3047671891009699, 0.29417559126759163`}, 12}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{11, {0.5434493007204525, 0.8363102048182735}, 13}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{11, {0.3398237100832371, 0.5121916990542638}, 14}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{
           11, {-0.017302702029694153`, 0.6085357391823708}, 15}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{11, {0.3145287385252196, 0.8925245270760205}, 16}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{12, {0.0937895928659755, 0.630018635866034}, 1}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{12, {0.8858640195874063, 0.4623679931207132}, 2}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{12, {0.22341098379350188`, 0.8150367824269237}, 3}],
           0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{12, {0.6706534241288837, 0.8531201060293645}, 4}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{12, {0.6479711309704257, 0.3850042562329987}, 5}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{12, {0.8464588562114927, 0.6866598730166745}, 6}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{12, {0.2791896338736067, 0.4762790896829171}, 7}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{12, {0.6238340809613578, 0.1099217112408006}, 8}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{12, {0.8139792307187542, 0.2378063407483071}, 9}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{12, {0.4496423069739092, 0.9011979938594749}, 10}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{
           12, {0.19370432932170115`, 0.19851040938301096`}, 11}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{12, 3089, 3092, 3094, 3100, 3102, 3105, 12},
           SplineDegree->7], 0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{12, {0.633358072732313, 0.6196282537237959}, 13}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{
           12, {0.4297324820950976, 0.29550974795978346`}, 14}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{12, {0.07260606998216629, 0.3918537880878899}, 15}],
           0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{12, {0.4044375105370796, 0.6758425759815441}, 16}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{13, {0.6076685023646268, 0.92464985618961}, 1}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{13, {1.3997429290860706`, 0.7569992134442664}, 2}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{13, {0.7372898932921558, 1.1096680027504993`}, 3}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{13, {1.1845323336275353`, 1.1477513263529173`}, 4}],
           0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{13, {1.1618500404690848`, 0.6796354765565764}, 5}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{13, {1.360337765710137, 0.9812910933402407}, 6}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{13, {0.7930685433722614, 0.770910310006487}, 7}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{13, {1.1377129904600132`, 0.404552931564369}, 8}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{13, {1.3278581402174099`, 0.5324375610718818}, 9}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{13, {0.9635212164725693, 1.1958292141830533`}, 10}],
           0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{13, {0.7075832388203549, 0.4931416297065825}, 11}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{13, {0.9085548706114849, 0.3721248604966839}, 12}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{13, 3368, 3371, 3373, 3379, 3381, 3384, 13},
           SplineDegree->7], 0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{13, {0.9436113915937491, 0.5901409682833553}, 14}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{13, {0.5864849794808186, 0.6864850084114663}, 15}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{13, {0.9183164200357395, 0.9704737963051109}, 16}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{14, {0.25140866330867817`, 0.7846673072169665}, 1}],
           0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{14, {1.0434830900301109`, 0.617016664471644}, 2}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{14, {0.38103005423620895`, 0.9696854537778551}, 3}],
           0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{14, {0.8282724945715937, 1.007768777380305}, 4}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{14, {0.8055902014131264, 0.5396529275839271}, 5}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{14, {1.0040779266542028`, 0.841308544367608}, 6}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{14, {0.43680870431631363`, 0.6309277610338376}, 7}],
           0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{14, {0.781453151404067, 0.26457038259173254`}, 8}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{14, {0.9715983011614553, 0.3924550120992383}, 9}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{14, {0.6072613774166153, 1.055846665210399}, 10}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{
           14, {0.35132339976440796`, 0.3531590807339412}, 11}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{14, {0.5522950315555376, 0.2321423115240444}, 12}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{14, {0.7909771431750199, 0.7742769250747275}, 13}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{14, 3647, 3650, 3652, 3658, 3660, 3663, 14},
           SplineDegree->7], 0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{
           14, {0.23022514042487172`, 0.5465024594388235}, 15}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{14, {0.562056580979787, 0.8304912473324774}, 16}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{
           15, {0.021183522883807267`, 1.0741804036620333`}, 1}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{15, {0.8132579496052413, 0.9065297609167112}, 2}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{
           15, {0.15080491381133493`, 1.2591985502229188`}, 3}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{15, {0.5980473541467229, 1.2972818738253684`}, 4}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{15, {0.5753650609882616, 0.8291660240289965}, 5}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{15, {0.7738527862293242, 1.1308216408126703`}, 6}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{15, {0.20658356389144428`, 0.9204408574789136}, 7}],
           0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{15, {0.5512280109791956, 0.5540834790367978}, 8}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{15, {0.7413731607365854, 0.6819681085443042}, 9}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{15, {0.377036236991739, 1.345359761655461}, 10}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{15, {0.1210982593395357, 0.6426721771790083}, 11}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{15, {0.3220698911306639, 0.5216554079691098}, 12}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{15, {0.5607520027501474, 1.0637900215197915`}, 13}],
           0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{15, {0.3571264121129317, 0.7396715157557822}, 14}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{15, 3926, 3929, 3931, 3937, 3939, 3942, 15},
           SplineDegree->7], 0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{
           15, {0.33183144055491254`, 1.1200043437775395`}, 16}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{16, {0.4568025082565847, 1.1057689486245836`}, 1}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{16, {1.248876934978015, 0.9381183058792573}, 2}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{16, {0.586423899184121, 1.290787095185454}, 3}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{16, {1.0336663395194887`, 1.3288704187879132`}, 4}],
           0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{16, {1.0109840463610316`, 0.8607545689915479}, 5}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{16, {1.2094717716021186`, 1.1624101857752145`}, 6}],
           0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{16, {0.6422025492642132, 0.9520294024414618}, 7}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{16, {0.986846996351967, 0.5856720239993467}, 8}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{16, {1.1769921461093606`, 0.7135566535068564}, 9}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{16, {0.8126552223645164, 1.3769483066180044`}, 10}],
           0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{16, {0.5567172447123167, 0.6742607221415644}, 11}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{16, {0.7576888765034372, 0.5532439529316591}, 12}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{16, {0.9963709881229533, 1.0953785664823317`}, 13}],
           0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{16, {0.7927453974857022, 0.7712600607183285}, 14}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{16, {0.4356189853727696, 0.8676041008464397}, 15}], 
          0.019038177794150513`], 
         ArrowBox[
          BezierCurveBox[{16, 4205, 4208, 4210, 4216, 4218, 4221, 16},
           SplineDegree->7], 0.019038177794150513`]}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
         DiskBox[1, 0.019038177794150513], DiskBox[2, 0.019038177794150513], 
         DiskBox[3, 0.019038177794150513], DiskBox[4, 0.019038177794150513], 
         DiskBox[5, 0.019038177794150513], DiskBox[6, 0.019038177794150513], 
         DiskBox[7, 0.019038177794150513], DiskBox[8, 0.019038177794150513], 
         DiskBox[9, 0.019038177794150513], DiskBox[10, 0.019038177794150513], 
         DiskBox[11, 0.019038177794150513], DiskBox[12, 0.019038177794150513],
          DiskBox[13, 0.019038177794150513], 
         DiskBox[14, 0.019038177794150513], DiskBox[15, 0.019038177794150513],
          DiskBox[16, 0.019038177794150513]}}]],
     MouseAppearanceTag["NetworkGraphics"]],
    AllowKernelInitialization->False]],
  DefaultBaseStyle->"NetworkGraphics",
  FormatType->TraditionalForm,
  FrameTicks->None]], "Output",
 CellChangeTimes->{{3.9533659935055513`*^9, 3.953366014163375*^9}, 
   3.953366063111788*^9, 3.953366103476479*^9, 3.9533662787569723`*^9},
 CellLabel->
  "Out[165]=",ExpressionUUID->"55422b8b-6e7a-4464-baa2-e5af1dab5d3c"]
}, Open  ]]
},
WindowSize->{808, 911},
WindowMargins->{{331, Automatic}, {54, Automatic}},
DockedCells->{
  Cell[
   BoxData[
    DynamicModuleBox[{LinterUIDockedCell`Private`notebook$$}, 
     GraphicsBox[{
       InsetBox[
        TemplateBox[{
          PaneBox[
           StyleBox[
           "\"Code Analysis\"", FontColor -> GrayLevel[0.4], FontFamily -> 
            "Source Sans Pro", FontWeight -> Plain, FontSize -> 13, 
            StripOnInput -> False], 
           BaselinePosition -> (Baseline -> Scaled[0.65])], 
          TemplateBox[{8}, "Spacer1"], 
          PaneBox[
           
           PaneSelectorBox[{{False, False} -> 
             TemplateBox[{0}, "Spacer1"], {True, False} -> 
             TemplateBox[{0}, "Spacer1"], {True, True} -> PaneBox[
               InterpretationBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEExpressions", "PercolateAnimator"][Medium]], 
                ProgressIndicator[Appearance -> "Percolate"], 
                BaseStyle -> {"Deploy"}], BaselinePosition -> Scaled[0.05]], {
              False, True} -> 
             DynamicModuleBox[{
               CodeInspector`LinterUI`Private`tracker$$ = 
                CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts}, 
               DynamicWrapperBox[
                DynamicBox[
                 ToBoxes[
                 CodeInspector`LinterUI`Private`tracker$$; 
                  LinterUIDockedCell`Private`dockedCellSeverityCountsButton[
                   LinterUIDockedCell`Private`notebook$$], TraditionalForm], 
                 TrackedSymbols :> {
                  CodeInspector`LinterUI`Private`tracker$$}], 
                If[
                CodeInspector`LinterUI`Private`tracker$$ =!= 
                 CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts, CodeInspector`LinterUI`Private`tracker$$ = 
                 CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts]], DynamicModuleValues :> {}]}, 
            Dynamic[FEPrivate`EvaluatorStatus["Local"]; {
               CodeInspector`LinterUI`Private`varValue[
               LinterUIDockedCell`Private`notebook$$, "AnalysisInProgressQ"], 
               
               TrueQ[
                CodeInspector`LinterUI`Private`varValue[
                LinterUIDockedCell`Private`notebook$$, 
                 "DockedCellPresentQ"]]}], ImageSize -> Automatic], 
           BaselinePosition -> Scaled[0.15]]}, "Row", 
         DisplayFunction -> (PaneBox[
           RowBox[{
             TemplateSlotSequence[1, "\[InvisibleSpace]"]}], Alignment -> 
           Baseline]& ), InterpretationFunction -> (RowBox[{"Row", "[", 
            RowBox[{
              RowBox[{"{", 
                TemplateSlotSequence[1, ","], "}"}], ",", 
              RowBox[{"Alignment", "\[Rule]", "Baseline"}]}], "]"}]& )], 
        Offset[{8, 0}, {-1, 0}], {-1, 0}], 
       InsetBox[
        PaneSelectorBox[{
         True -> DynamicModuleBox[{
            CodeInspector`LinterUI`Private`hoverQ$$ = False, 
             CodeInspector`LinterUI`Private`mouseDownQ$$ = False, 
             CodeInspector`LinterUI`Private`fontColor$$}, 
            ButtonBox[
             DynamicWrapperBox[
              TemplateBox[{
                DynamicWrapperBox[
                 StyleBox[
                  PaneBox[
                  "\"Reanalyze Notebook\"", ContentPadding -> True, 
                   FrameMargins -> None, BaselinePosition -> Baseline], 
                  FontColor -> 
                  Dynamic[CodeInspector`LinterUI`Private`fontColor$$], 
                  FontColor -> GrayLevel[0.2], FontFamily -> 
                  "Source Sans Pro", FontWeight -> Plain, FontSize -> 14, 
                  StripOnInput -> False], 
                 CodeInspector`LinterUI`Private`fontColor$$ = Which[
                   TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextInactiveColor"], 
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextHoverColor"], True, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextColor"]]], ContentPadding -> False, 
                FrameMargins -> {{9, 9}, {0, 0}}, 
                Alignment -> {Center, Center}, ImageSize -> {Automatic, 19}, 
                RoundingRadius -> 3, FrameStyle -> Dynamic[
                  Directive[
                   AbsoluteThickness[0.5], 
                   Which[
                    TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeInactiveColor"], 
                    CodeInspector`LinterUI`Private`hoverQ$$, 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeHoverColor"], True, 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeColor"]]]], Background -> Dynamic[
                  Which[
                   TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackInactiveColor"], 
                   And[
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                    CodeInspector`LinterUI`Private`mouseDownQ$$], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackMouseDownColor"], 
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackHoverColor"], True, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackColor"]]]}, "Highlighted"], 
              CodeInspector`LinterUI`Private`hoverQ$$ = 
               CurrentValue["MouseOver"]; 
              CodeInspector`LinterUI`Private`mouseDownQ$$ = 
               CurrentValue["MouseButtonTest"]], 
             Appearance -> {
              "Default" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True], 
               "Pressed" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True]}, 
             BaselinePosition -> Baseline, 
             ButtonFunction :> (
              If[OptionValue[{
                  ImageSize -> {Automatic, 19}, 
                   FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                   Baseline, Alignment -> {Center, Center}, Method -> 
                   "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                   "TextHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                   "BackHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                   "EdgeHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, "ActiveQ"] =!= 
                False, 
                CodeInspector`LinterUI`Private`attachAnalysisAction[
                 EvaluationNotebook[]]]; 
              CodeInspector`LinterUI`Private`mouseDownQ$$ = False), 
             ContentPadding -> False, Evaluator -> Automatic, Method -> 
             "Queued"], DynamicModuleValues :> {}], False -> ButtonBox[
            TemplateBox[{
              StyleBox[
              "\"Analyze Notebook\"", FontColor -> GrayLevel[0.2], FontFamily -> 
               "Source Sans Pro", FontWeight -> Plain, FontSize -> 14, 
               StripOnInput -> False], ImageSize -> {Automatic, 19}, 
              FrameMargins -> {{9, 9}, {0, 0}}, BaselinePosition -> Baseline, 
              Alignment -> {Center, Center}, Background -> GrayLevel[1], 
              FrameStyle -> Dynamic[
                If[
                 CurrentValue["MouseOver"], 
                 Hue[0.55, 0.82, 0.87], 
                 GrayLevel[0.8]]]}, "Highlighted"], 
            Appearance -> {
             "Default" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True], "Pressed" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True]}, 
            ButtonFunction :> (CurrentValue[
                EvaluationNotebook[], DockedCells] = 
              With[{LinterUIDockedCell`Private`dockedCells = CurrentValue[
                   EvaluationNotebook[], DockedCells]}, 
                Pick[LinterUIDockedCell`Private`dockedCells, 
                 Map[Quiet[
                    Options[#, CellTags]] =!= {
                   CellTags -> "CodeAnalysisDockedCell"}& , 
                  LinterUIDockedCell`Private`dockedCells]]]; 
             Needs["CodeInspector`"]; 
             CodeInspector`AttachAnalysis[
              LinterUIDockedCell`Private`notebook$$]), Evaluator -> Automatic,
             Method -> "Queued"]}, 
         Dynamic[FEPrivate`EvaluatorStatus["Local"]; TrueQ[
            CodeInspector`LinterUI`Private`varValue[
            LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"]]], 
         ImageSize -> Automatic], 
        Offset[{-26, 0}, {1, 0}], {1, 0}], 
       TagBox[
        TagBox[
         TooltipBox[{{
            GrayLevel[0.6], 
            DiskBox[
             Offset[{-11, 0}, {1, 0}], 
             Offset[6]]}, {
            GrayLevel[0.97], 
            AbsoluteThickness[1.5], 
            CapForm["Round"], 
            LineBox[{{
               Offset[{-13, 2}, {1, 0}], 
               Offset[{-9, -2}, {1, 0}]}, {
               Offset[{-13, -2}, {1, 0}], 
               Offset[{-9, 2}, {1, 0}]}}]}}, "\"Close analysis\"", 
          TooltipDelay -> 0, TooltipStyle -> "TextStyling"], 
         Annotation[#, "Close analysis", "Tooltip"]& ], 
        EventHandlerTag[{"MouseClicked" :> (Map[NotebookDelete, 
             Flatten[
              CodeInspector`LinterUI`Private`varValue[
              LinterUIDockedCell`Private`notebook$$, All, 
               "UIAttachedCells"]]]; Map[NotebookDelete, 
             Flatten[
              CodeInspector`LinterUI`Private`varValue[
              LinterUIDockedCell`Private`notebook$$, All, 
               "CleanCellBracketMarker"]]]; CurrentValue[
              EvaluationNotebook[], DockedCells] = 
            With[{LinterUIDockedCell`Private`dockedCells = CurrentValue[
                 EvaluationNotebook[], DockedCells]}, 
              Pick[LinterUIDockedCell`Private`dockedCells, 
               Map[Quiet[
                  Options[#, CellTags]] =!= {
                 CellTags -> "CodeAnalysisDockedCell"}& , 
                LinterUIDockedCell`Private`dockedCells]]]; 
           CodeInspector`LinterUI`Private`applyToVar[Remove, {
              EvaluationNotebook[], All}]; 
           CodeInspector`LinterUI`Private`varSet[{
             LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"}, 
             False]), Method -> "Preemptive", PassEventsDown -> Automatic, 
          PassEventsUp -> True}]]}, AspectRatio -> Full, 
      ImageSize -> {Full, 23}, PlotRange -> {{-1, 1}, {-1, 1}}], 
     Deinitialization :> 
     CodeInspector`LinterUI`Private`varSet[{
       LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"}, False], 
     DynamicModuleValues :> {}, 
     Initialization :> ({
       LinterUIDockedCell`Private`dockedCellSeverityCountsButton[
          Pattern[LinterUIDockedCell`Private`notebook, 
           Blank[NotebookObject]]] := 
        With[{LinterUIDockedCell`Private`formatIcon = 
           Show[#, ImageSize -> {13, 9}, BaselinePosition -> Scaled[-0.2]]& }, 
          ActionMenu[
           Highlighted[
            Row[{
              CodeInspector`LinterUI`Private`lintSeverityCountsIconRow[
              LinterUIDockedCell`Private`notebook, "exclamSize" -> 12, 
               FontSize -> 14, FontWeight -> Plain], 
              Spacer[2], 
              LinterUIDockedCell`Private`formatIcon[
               CodeInspector`LinterUI`Private`iconData["DownChevron"][
                CodeInspector`LinterUI`Private`colorData["UIDark"]]]}], 
            ImageSize -> {Automatic, 19}, BaselinePosition -> Baseline, 
            Background -> White, Frame -> True, FrameStyle -> Dynamic[
              If[
               CurrentValue["MouseOver"], 
               Hue[0.55, 0.82, 0.87], 
               GrayLevel[0.8]]], FrameMargins -> {6 {1, 1}, {1, 1}}, 
            Alignment -> {Center, Baseline}], 
           Map[
           LinterUIDockedCell`Private`dockedCellMenuItem[
            LinterUIDockedCell`Private`notebook, #]& , 
            CodeInspector`LinterUI`Private`varValue[
            LinterUIDockedCell`Private`notebook, All, "Cell"]], Appearance -> 
           None]], LinterUIDockedCell`Private`dockedCellMenuItem[
          Pattern[LinterUIDockedCell`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[LinterUIDockedCell`Private`cell, 
           Blank[CellObject]]] := With[{}, Graphics[{
             Inset[
              With[{LinterUIDockedCell`Private`expressionString = First[
                  FrontEndExecute[
                   FrontEnd`ExportPacket[
                    First[
                    CodeInspector`LinterUI`Private`varValue[
                    LinterUIDockedCell`Private`notebook, 
                    LinterUIDockedCell`Private`cell, "CellContents"]], 
                    "InputText"]]]}, {
               LinterUIDockedCell`Private`noLineBreaks = 
                StringReplace[
                 LinterUIDockedCell`Private`expressionString, "\n" -> " "]}, {
               LinterUIDockedCell`Private`previewString = 
                StringTake[LinterUIDockedCell`Private`noLineBreaks, {1, 
                   UpTo[LinterUIDockedCell`Private`$previewLength]}]}, 
               CodeInspector`LinterUI`Private`styleData["FixedWidth"][
                If[
                StringLength[LinterUIDockedCell`Private`expressionString] > 
                 LinterUIDockedCell`Private`$previewLength, 
                 StringDrop[LinterUIDockedCell`Private`previewString, -1] <> 
                 "\[Ellipsis]", 
                 LinterUIDockedCell`Private`previewString]]], {-1, 0}, {-1, 
              0}], 
             Inset[
              CodeInspector`LinterUI`Private`lintSeverityCountsIconRow[
              LinterUIDockedCell`Private`cell], {1, 0}, {1, 0}]}, 
            ImageSize -> {300, 25}, AspectRatio -> Full, 
            PlotRange -> {{-1, 1}, {-1, 1}}, ImagePadding -> None] :> (
           SelectionMove[LinterUIDockedCell`Private`cell, All, Cell]; 
           With[{
             LinterUIDockedCell`Private`nb = 
              ParentNotebook[LinterUIDockedCell`Private`cell]}, 
             FrontEndExecute[
              FrontEnd`FrontEndToken[
              LinterUIDockedCell`Private`nb, "OpenSelectionParents"]]]; 
           SelectionMove[LinterUIDockedCell`Private`cell, After, Cell])], 
        LinterUIDockedCell`Private`$previewLength = 28, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`notebook, 
            Blank[NotebookObject]], All, 
           Pattern[CodeInspector`LinterUI`Private`name, 
            Blank[String]]}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Map[Apply[CodeInspector`LinterUI`Private`function, 
           Join[
            ToHeldExpression[#], 
            Hold[CodeInspector`LinterUI`Private`args]]]& , 
          
          Names[(CodeInspector`LinterUI`Private`varNameString[
             CodeInspector`LinterUI`Private`notebook] <> "*") <> 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]], 
           Pattern[CodeInspector`LinterUI`Private`name, 
            Blank[String]]}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Apply[CodeInspector`LinterUI`Private`function, 
          Join[
           ToHeldExpression[
            CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments]], 
           Hold[CodeInspector`LinterUI`Private`args]]], Null, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]], All}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Map[Apply[CodeInspector`LinterUI`Private`function, 
           Join[
            ToHeldExpression[#], 
            Hold[CodeInspector`LinterUI`Private`args]]]& , 
          Names[
          CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> "*"]], 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], All, 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := Map[Symbol, 
          
          Names[(CodeInspector`LinterUI`Private`varNameString[
             CodeInspector`LinterUI`Private`notebook] <> "*") <> 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := Symbol[
          CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`nameArguments, 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], All] := Map[Symbol, 
          Names[
          CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> "*"]], 
        CodeInspector`LinterUI`Private`varSet[{
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]]}, 
          Pattern[CodeInspector`LinterUI`Private`value, 
           Blank[]]] := Apply[Set, 
          Append[
           ToHeldExpression[
            CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments]], 
           CodeInspector`LinterUI`Private`value]], 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]]] := ((
           "CodeInspector`LinterUI`Private`Vars`" <> "$$") <> 
          With[{CodeInspector`LinterUI`Private`nbID = 
             Last[CodeInspector`LinterUI`Private`notebook]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`nbID], 
             StringReplace[CodeInspector`LinterUI`Private`nbID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`nbID]]]) <> "$$", Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]]] := (
          CodeInspector`LinterUI`Private`varNameString[
            Replace[
             ParentNotebook[CodeInspector`LinterUI`Private`cell], $Failed -> 
             EvaluationNotebook[]]] <> 
          With[{CodeInspector`LinterUI`Private`cellID = 
             First[CodeInspector`LinterUI`Private`cell]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`cellID], 
             StringReplace[CodeInspector`LinterUI`Private`cellID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`cellID]]]) <> "$$", Null,
         CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]]] := (
          CodeInspector`LinterUI`Private`varNameString[
           CodeInspector`LinterUI`Private`notebook] <> 
          With[{CodeInspector`LinterUI`Private`cellID = 
             First[CodeInspector`LinterUI`Private`cell]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`cellID], 
             StringReplace[CodeInspector`LinterUI`Private`cellID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`cellID]]]) <> "$$", Null,
         CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`notebook] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`cell] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`notebook, 
           CodeInspector`LinterUI`Private`cell] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], 
          Pattern[CodeInspector`LinterUI`Private`lint, 
           Blank[CodeInspector`InspectionObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := ((
           CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> Apply[Sequence, 
             Riffle[
              Map[StringDelete[
                ToString[#], 
                Alternatives["[", "]", "{", "}", ",", " "]]& , 
               CodeInspector`LinterUI`Private`extractFirstList[
                Last[CodeInspector`LinterUI`Private`lint][
                CodeParser`Source]]], "$"]]) <> "$$") <> 
         CodeInspector`LinterUI`Private`name, 
        CodeInspector`LinterUI`Private`extractFirstList[
          Pattern[CodeInspector`LinterUI`Private`expr, 
           Blank[]]] := FirstCase[CodeInspector`LinterUI`Private`expr, 
          Blank[List], {}, {0, Infinity}]}; 
      LinterUIDockedCell`Private`notebook$$ = EvaluationNotebook[]), 
     UnsavedVariables :> {LinterUIDockedCell`Private`notebook$$}]], 
   CellFrame -> {{0, 0}, {1, 1}}, CellFrameMargins -> {{0, 0}, {0, 0}}, 
   CellFrameColor -> GrayLevel[0.85], Background -> GrayLevel[0.97], CellTags -> 
   "CodeAnalysisDockedCell"]},
FrontEndVersion->"13.2 for Mac OS X x86 (64-bit) (November 18, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"203cab49-446b-4ec9-9a61-6255ed631311"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 210, 4, 30, "Input",ExpressionUUID->"a58ea637-0eaa-43ef-b69e-e6d07ca9cc9a"],
Cell[771, 26, 355, 8, 30, "Input",ExpressionUUID->"87482ccc-5715-447c-87dd-c3471b441c5b"],
Cell[1129, 36, 697, 20, 30, "Input",ExpressionUUID->"1fedb6b6-feb8-4534-b83f-c6cb00645bc0"],
Cell[1829, 58, 350, 9, 30, "Input",ExpressionUUID->"c9dbcd95-19f6-4215-bbba-8ef488f8b990"],
Cell[CellGroupData[{
Cell[2204, 71, 375, 11, 30, "Input",ExpressionUUID->"80fc9cae-f76d-4cd3-a592-19eb3b5948c0"],
Cell[2582, 84, 623, 14, 34, "Output",ExpressionUUID->"9a4b556f-d82c-4f5d-8a30-f2ac66cc5a2d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3242, 103, 397, 12, 30, "Input",ExpressionUUID->"cbc242ec-f9b4-4086-afd0-e4d178cb8681"],
Cell[3642, 117, 629, 15, 34, "Output",ExpressionUUID->"85076ec7-7409-4577-a0d1-74f3ffe4d313"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4308, 137, 397, 12, 30, "Input",ExpressionUUID->"e13a1bd2-8087-45bd-841c-19fb93213412"],
Cell[4708, 151, 658, 15, 34, "Output",ExpressionUUID->"48d96bd7-f2ba-4cf6-910d-f6fb0c950fa3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5403, 171, 375, 11, 30, "Input",ExpressionUUID->"5b446c56-1453-4396-a762-c4231ae62cd6"],
Cell[5781, 184, 627, 14, 34, "Output",ExpressionUUID->"b3fbd05c-ecfa-4fef-8fdd-bf5761122718"]
}, Open  ]],
Cell[6423, 201, 445, 11, 30, "Input",ExpressionUUID->"84a8aa20-2d8b-4c75-9af2-bb9e28de0a84"],
Cell[CellGroupData[{
Cell[6893, 216, 445, 13, 30, "Input",ExpressionUUID->"851dfac3-3a7c-41be-8801-88c93aa8d8aa"],
Cell[7341, 231, 640, 15, 34, "Output",ExpressionUUID->"2b43b499-e934-4e0d-a7d5-758266330b3e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8018, 251, 424, 12, 30, "Input",ExpressionUUID->"670bb2d0-a197-43e1-9259-763296cc4664"],
Cell[8445, 265, 608, 14, 34, "Output",ExpressionUUID->"4042497f-75d4-45b4-9780-eab92f45dd9b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9090, 284, 426, 12, 30, "Input",ExpressionUUID->"efa09666-661d-440c-a79a-f020105fe89c"],
Cell[9519, 298, 634, 14, 34, "Output",ExpressionUUID->"0fa09f8e-fc9a-494d-b977-2900b3abba23"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10190, 317, 448, 13, 30, "Input",ExpressionUUID->"0b1ebac2-a347-4a37-9889-9996b35f911f"],
Cell[10641, 332, 650, 15, 34, "Output",ExpressionUUID->"c246f64e-cfc9-47df-b930-89211dd79ffb"]
}, Open  ]],
Cell[11306, 350, 235, 5, 30, "Input",ExpressionUUID->"36d0ace7-982d-4461-938b-11d87798b70e"],
Cell[CellGroupData[{
Cell[11566, 359, 615, 15, 30, "Input",ExpressionUUID->"b3b8b160-8af5-4f7c-a6f8-2702c6ca6aae"],
Cell[12184, 376, 562, 13, 34, "Output",ExpressionUUID->"fc3e9d7f-5858-491b-822a-1cc40809c8c9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12783, 394, 366, 10, 30, "Input",ExpressionUUID->"73fde184-73e6-4a1a-83be-f884c76fcb44"],
Cell[13152, 406, 597, 13, 34, "Output",ExpressionUUID->"4433ca8b-928f-4d1e-a4ff-53adbf26a991"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13786, 424, 367, 10, 30, "Input",ExpressionUUID->"52dbd412-d839-400a-8bcd-b4d2207ff383"],
Cell[14156, 436, 561, 10, 34, "Output",ExpressionUUID->"54a15f41-dda0-4328-99ab-03333c5877d6"]
}, Open  ]],
Cell[14732, 449, 237, 5, 30, "Input",ExpressionUUID->"6bb4063e-b1d9-4f4a-9320-41dc81b2bed2"],
Cell[CellGroupData[{
Cell[14994, 458, 389, 11, 30, "Input",ExpressionUUID->"69c703e1-b65b-4568-a813-4f77ae2e6d60"],
Cell[15386, 471, 569, 13, 34, "Output",ExpressionUUID->"4b13f131-35ce-4200-b7b6-78026d2ae52e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15992, 489, 366, 10, 30, "Input",ExpressionUUID->"8936b1df-642b-444e-b021-bd461b4a6555"],
Cell[16361, 501, 500, 11, 40, "Message",ExpressionUUID->"cab4c1a7-4627-4737-9f92-9a5df4b77a32"],
Cell[16864, 514, 498, 11, 40, "Message",ExpressionUUID->"761ef5c2-07de-4e0d-908b-c7eaa27e56bc"],
Cell[17365, 527, 500, 11, 40, "Message",ExpressionUUID->"7784e970-ccd5-4653-94a5-124ceb9783b4"],
Cell[17868, 540, 578, 12, 28, "Message",ExpressionUUID->"4e4b551b-7ed6-4b99-840f-7b3b4b749109"],
Cell[18449, 554, 550, 12, 49, "Output",ExpressionUUID->"eb77f1d9-e506-4319-a457-425c13a842d7"]
}, Open  ]],
Cell[19014, 569, 233, 5, 30, "Input",ExpressionUUID->"e7f6db47-d3f3-4aa5-be7b-3e81f47276f0"],
Cell[CellGroupData[{
Cell[19272, 578, 332, 9, 30, "Input",ExpressionUUID->"c689d62e-85a9-4256-b475-e9c2499fe8c0"],
Cell[19607, 589, 692, 17, 34, "Output",ExpressionUUID->"8423465b-37fe-4a65-9ed4-ef7642ec775d"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20336, 611, 456, 13, 30, "Input",ExpressionUUID->"182741e5-2aec-4077-bf81-eb883ed3a745"],
Cell[20795, 626, 1404, 42, 56, "Output",ExpressionUUID->"3093b9a7-b6bb-4a39-be1c-d00376f917cc"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22236, 673, 347, 8, 30, "Input",ExpressionUUID->"f3aad226-8961-44e4-944d-851875a8683c"],
Cell[22586, 683, 3719, 85, 310, "Output",ExpressionUUID->"8243f813-8ab3-4cda-9ddd-31a1957b4b17"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26342, 773, 236, 5, 30, "Input",ExpressionUUID->"2ab37a79-189a-40b0-8e52-f6779a81271b"],
Cell[26581, 780, 372, 10, 34, "Output",ExpressionUUID->"e016ff10-2dca-48cf-ba87-fdb656234aa9"]
}, Open  ]],
Cell[26968, 793, 235, 5, 30, "Input",ExpressionUUID->"eae93042-dc11-4867-ab9b-999fe539feed"],
Cell[CellGroupData[{
Cell[27228, 802, 907, 26, 30, "Input",ExpressionUUID->"bbf99c4f-89dd-420e-b822-9199dc08db3f"],
Cell[28138, 830, 7183, 172, 350, "Output",ExpressionUUID->"8ca917b5-1e0d-407a-85cc-8b15b1a5e7ee"]
}, Open  ]],
Cell[CellGroupData[{
Cell[35358, 1007, 207, 4, 30, "Input",ExpressionUUID->"83a086d9-82ec-4357-a967-3484a996e500"],
Cell[35568, 1013, 5321, 144, 287, "Output",ExpressionUUID->"94c87472-8c73-4145-8dae-cc19233149b0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40926, 1162, 214, 4, 30, "Input",ExpressionUUID->"710622f2-a61a-4492-bbba-994ea49b68e0"],
Cell[41143, 1168, 451, 9, 34, "Output",ExpressionUUID->"9f3905c8-98e2-4fb7-b54f-ce2c5ec5667b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[41631, 1182, 225, 4, 30, "Input",ExpressionUUID->"f1eb081c-4138-405f-9392-58657d8a8e62"],
Cell[41859, 1188, 126958, 2319, 372, "Output",ExpressionUUID->"55422b8b-6e7a-4464-baa2-e5af1dab5d3c"]
}, Open  ]]
}
]
*)

